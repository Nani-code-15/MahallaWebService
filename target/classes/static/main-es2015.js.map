{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/app/_helpers/root.service.ts","webpack:///src/app/_services/webhooks.service.ts","webpack:///src/app/_services/_aaa_module/authentication.service.ts","webpack:///src/app/_services/_aaa_module/role-permission.service.ts","webpack:///src/app/_services/_aaa_module/user.service.ts","webpack:///src/app/_services/_aaa_module/user-role-master.service.ts","webpack:///src/app/_services/_aaa_module/ProfileSetting.service.ts","webpack:///src/app/_services/_super_admin_module/form-and-table.service.ts","webpack:///src/app/_services/_super_admin_module/module-service.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/_helpers/auth.guard.ts","webpack:///src/app/_helpers/error.interceptor.ts","webpack:///src/app/_helpers/fake-backend.ts","webpack:///src/app/_helpers/jwt.interceptor.ts","webpack:///src/app/_helpers/fallback-img.directive.ts","webpack:///src/app/app.component.ts","webpack:///src/app/_nav.ts","webpack:///src/app/containers/default-layout/default-layout.component.ts","webpack:///src/app/containers/default-layout/default-layout.component.html","webpack:///src/app/views/error/404.component.ts","webpack:///src/app/views/error/404.component.html","webpack:///src/app/views/error/500.component.ts","webpack:///src/app/views/error/500.component.html","webpack:///src/app/views/login/login.component.html","webpack:///src/app/views/login/login.component.ts","webpack:///src/app/views/register/register.component.ts","webpack:///src/app/views/register/register.component.html","webpack:///src/app/app.routing.ts","webpack:///src/app/app.module.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","RootService","insurenceData","ProfileData","providedIn","WebhooksService","http","this","get","environment","AuthenticationService","currentUserSubject","BehaviorSubject","JSON","parse","localStorage","getItem","currentUser","asObservable","value","email","password","data","post","pipe","map","user","token","userData","getDecodedAccessToken","setItem","stringify","next","removeItem","location","reload","RolePermissionService","router","put","delete","navigate","queryParams","RoleID","UserService","baseServiceUrl","UserRoleMasterService","ProfileSettingService","baseServiceUrl_auth","formData","FormData","Object","forEach","key","append","FormAndTableService","mod","ModuleServiceService","parent","parentId","options","ModuleID","production","baseURL","apiUrl","webhookUrl","AuthGuard","authenticationService","route","state","currentUserValue","returnUrl","url","ErrorInterceptor","request","handle","catchError","err","console","log","status","logout","error","errorMessage","statusText","throwError","users","FakeBackendInterceptor","method","headers","body","of","mergeMap","endsWith","username","find","x","ok","message","materialize","delay","dematerialize","JwtInterceptor","isLoggedIn","isApiUrl","startsWith","clone","setHeaders","Authorization","FallbackImgDirective","src","fallback","selector","AppComponent","iconSet","icons","events","subscribe","evt","window","scrollTo","template","providers","navItems","DefaultLayoutComponent","messageService","sidebarMinimized","getAllModuleByuserrole","add","severity","summary","detail","unflatten","list","node","i","roots","length","children","linkProps","push","sort","a","b","sortId","P404Component","P500Component","LoginComponent","formBuilder","webhook","loading","submitted","loginForm","group","userId","snapshot","controls","invalid","login","f","first","returnval","split","errorcount","RegisterComponent","routes","path","redirectTo","pathMatch","component","canActivate","title","loadChildren","m","DashboardModule","FormbuilderModule","TablebuilderModule","MasterwindowModule","AppRoutingModule","imports","relativeLinkResolution","APP_CONTAINERS","AppModule","animation","declarations","provide","useExisting","useClass","multi","bootstrap","bootstrapModule","useJit","preserveWhitespaces","catch"],"mappings":"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","file":"x","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RootService {\r\n\r\n  public insurenceData:any = [];\r\n  public ProfileData:any = {};\r\n\r\n  constructor() { }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WebhooksService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  loginError() {\r\n      return this.http.get(`${environment.webhookUrl}/beeserp_loginError`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { environment } from '../../../environments/environment';\r\nimport { User } from '../../_models';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n    private currentUserSubject: BehaviorSubject<User>;\r\n    public currentUser: Observable<User>;\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\r\n        this.currentUser = this.currentUserSubject.asObservable();\r\n    }\r\n\r\n    public get currentUserValue(): User {\r\n        return this.currentUserSubject.value;\r\n    }\r\n\r\n    login(email: string, password: string) {\r\n        var data = {\r\n            \"userId\":email,\r\n            \"password\":password\r\n        }\r\n        return this.http.post<any>(`${environment.apiUrl}/auth/web-login`, data)\r\n            .pipe(map(user => {\r\n                if(user['status'] == 1){\r\n                    var token = user['refreshToken'];\r\n                    var userData = this.getDecodedAccessToken(user['refreshToken']);\r\n                    userData.token = token;\r\n                    localStorage.setItem('currentUser', JSON.stringify(userData));\r\n                    this.currentUserSubject.next(userData);\r\n                }\r\n                return user;\r\n            }));\r\n    }\r\n\r\n    getDecodedAccessToken(token: string): any {\r\n        try{\r\n            return jwt_decode(token);\r\n        }\r\n        catch(Error){\r\n            return null;\r\n        }\r\n      }\r\n\r\n    logout() {\r\n        // remove user from local storage to log user out\r\n        localStorage.removeItem('currentUser');\r\n        this.currentUserSubject.next(null);\r\n        location.reload();\r\n    }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\nimport { UserService } from '../../_services';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RolePermissionService {\r\n\r\n  constructor(private http: HttpClient, private user: UserService, private router: Router,) { }\r\n\r\n  getAll(id:string) {\r\n    return this.http.get<any[]>(`${environment.apiUrl}/role-master?isPagination=false`);\r\n  }\r\n\r\n  submitform(e:any){\r\n    if(e['id']){\r\n      return this.http.put<any[]>(`${environment.apiUrl}/role-master`, e);\r\n    }\r\n    else{\r\n      return this.http.post<any[]>(`${environment.apiUrl}/role-master`, e);\r\n    }\r\n  }\r\n  delete(e:any){\r\n    return this.http.delete<any[]>(`${environment.apiUrl}/role-master/`+ e?.id);\r\n  }\r\n\r\n  //\r\n  definerole(e:any){\r\n    this.router.navigate(['/masterwindow/rolepermission'], { queryParams: { RoleID: e?.id } });\r\n  }\r\n\r\n  //\r\n  getPermissionValue(e:any){\r\n    return this.http.get<any[]>(`${environment.apiUrl}/role-master-prm/` + e);\r\n  }\r\n\r\n  submitpermission(e:any){\r\n      return this.http.put<any[]>(`${environment.apiUrl}/role-master-prm/`, e);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { environment } from '../../../environments/environment';\r\nimport { User } from '../../_models';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public userData = [];\r\n    public baseServiceUrl = '/user-master'\r\n\r\n    getAll() {\r\n        return this.http.get<any[]>(`${environment.apiUrl}/user-master?isPagination=false`);\r\n    }\r\n    submitform(e:any){\r\n        if(e['id']){\r\n          return this.http.put<any[]>(`${environment.apiUrl}/user-master`, e);\r\n        }\r\n        else{\r\n          return this.http.post<any[]>(`${environment.apiUrl}/user-master`, e);\r\n        }\r\n    }\r\n\r\n    delete(e:any){\r\n        return this.http.delete<any[]>(`${environment.apiUrl}/user-master/`+ e?.id);\r\n    }\r\n\r\n    deleteSelected(e:any){\r\n        return this.http.post<any[]>(`${environment.apiUrl+this.baseServiceUrl}`+'/delete-all', e);\r\n      }\r\n\r\n      ImportCSV(e:any){\r\n        return this.http.post<any[]>(`${environment.apiUrl+this.baseServiceUrl}`+'/add-all', e);\r\n      }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\nimport { UserService } from '../../_services';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserRoleMasterService {\r\n\r\n  public baseServiceUrl = '/userrolemaster'\r\n\r\n  constructor(private http: HttpClient, private user: UserService, private router: Router,) { }\r\n\r\n  getAll(id:string) {\r\n    return this.http.get<any[]>(`${environment.apiUrl}/userrolemaster/getAll`);\r\n  }\r\n\r\n  submitform(e:any){\r\n    e['CRBY'] = this.user.userData['ID'];\r\n    if(e['ID']){\r\n      return this.http.post<any[]>(`${environment.apiUrl}/userrolemaster/update`, e);\r\n    }\r\n    else{\r\n      return this.http.post<any[]>(`${environment.apiUrl}/userrolemaster/create`, e);\r\n    }\r\n  }\r\n  delete(e:any){\r\n    return this.http.post<any[]>(`${environment.apiUrl}/userrolemaster/delete`, e);\r\n  }\r\n  deleteSelected(e:any){\r\n    return this.http.post<any[]>(`${environment.apiUrl+this.baseServiceUrl}`+'/delete-all', e);\r\n  }\r\n\r\n  ImportCSV(e:any){\r\n    return this.http.post<any[]>(`${environment.apiUrl+this.baseServiceUrl}`+'/add-all', e);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { environment } from '../../../environments/environment';\r\nimport { RootService } from '../../_helpers/root.service';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfileSettingService {\r\n  constructor(private http: HttpClient, public RootService: RootService, private router: Router,) { }\r\n\r\n  public userData = [];\r\n  private baseServiceUrl = '/profile-setting'\r\n  private baseServiceUrl_auth = '/auth/profile-setting'\r\n\r\n  getAll() {\r\n    return this.http.get<any[]>(`${environment.apiUrl + this.baseServiceUrl_auth}`);\r\n}\r\n\r\n  submitform(e: any) {\r\n    var formData = new FormData();\r\n    Object.keys(e).forEach(function(key) {\r\n      if(key == 'logoSmallFile' || key == 'logoLargeFile'){\r\n        if(e['logoSmallFile'])\r\n          formData.append(key, e['logoSmallFile'])\r\n        if(e['logoLargeFile'])\r\n          formData.append(key, e['logoLargeFile'])\r\n      }else{\r\n        formData.append(key, e[key])\r\n      }\r\n    })\r\n    if (e['id']) {\r\n      return this.http.put<any[]>(`${environment.apiUrl + this.baseServiceUrl}`, formData);\r\n    }\r\n    else {\r\n      e['id'] = 0\r\n      formData.append('id', e['id']);\r\n      return this.http.post<any[]>(`${environment.apiUrl + this.baseServiceUrl}`, formData);\r\n    }\r\n  }\r\n\r\n  delete(e:any){\r\n      return this.http.delete<any[]>(`${environment.apiUrl+this.baseServiceUrl}/`+ e?.id);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\nimport { UserService } from '../../_services';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormAndTableService {\r\n\r\n\r\n\r\n  constructor(private http: HttpClient, private user: UserService,) { }\r\n\r\n  getAllModuleByuserrole(id:string) {\r\n    //return this.http.get<any[]>(`${environment.apiUrl}/role-master/get?roleName=` + id );\r\n    return this.http.get<any[]>(`${environment.apiUrl}/role-master-prm/read-only`);\r\n  }\r\n\r\n  getAllModuleById(id:string) {\r\n    return this.http.get<any[]>(`${environment.apiUrl}/all-module/`+ id );\r\n  }\r\n  getTableMainSchema(id:string) {\r\n    return this.http.get<any[]>(`${environment.apiUrl}/table-main-schema/` +id);\r\n  }\r\n  getTableButtonSchema(id:string) {\r\n    return this.http.get<any[]>(`${environment.apiUrl}/table-button-schema/`+ id );\r\n  }\r\n  getFormSchema(id:string) {\r\n    return this.http.get<any[]>(`${environment.apiUrl}/form-data/` + id );\r\n  }\r\n  CreateFormData(data:any) {\r\n    return this.http.post<any[]>(`${environment.apiUrl}/form-data`,  data );\r\n  }\r\n  submittabledata(data:any, mod:any) {\r\n    data['sortBy'] = 0;\r\n    data['pageMasterId'] = mod;\r\n    //data['isActive'] = 1;\r\n\r\n    if(data['id']){\r\n      return this.http.put<any[]>(`${environment.apiUrl}/table-main-schema`, data);\r\n    }\r\n    else{\r\n      return this.http.post<any[]>(`${environment.apiUrl}/table-main-schema`, data);\r\n    }\r\n  }\r\n  delete3(e:any){\r\n    return this.http.delete<any[]>(`${environment.apiUrl}/table-main-schema/`+ e?.id);\r\n  }\r\n\r\n  submittabledata2(data:any, mod:any) {\r\n    data['pageMasterId'] = mod;\r\n    //data['isActive'] = 1;\r\n\r\n    if(data['id']){\r\n      return this.http.put<any[]>(`${environment.apiUrl}/table-button-schema`, data);\r\n    }\r\n    else{\r\n      return this.http.post<any[]>(`${environment.apiUrl}/table-button-schema`, data);\r\n    }\r\n  }\r\n\r\n  delete2(e:any){\r\n    return this.http.delete<any[]>(`${environment.apiUrl}/table-button-schema/`+ e?.id);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\nimport { UserService } from '../../_services';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModuleServiceService {\r\n\r\n  public baseServiceUrl = '/page-master'\r\n\r\n  constructor(private http: HttpClient, private user: UserService, private router: Router,) { }\r\n\r\n  getAll(e:any) {\r\n    return this.http.get<any[]>(`${environment.apiUrl}/page-master?isPagination=false`);\r\n  }\r\n\r\n  submitform(e:any){\r\n\r\n    if(e.parent == true && e.parentId == null){\r\n      e.parentId = 0;\r\n    }\r\n\r\n    var options = {\r\n        'ShowImport': e['ShowImport'],\r\n        'ShowDeleteAll': e['DeleteAll']\r\n      }\r\n\r\n\r\n    e['options'] = JSON.stringify(options);\r\n\r\n    if(e['id']){\r\n      return this.http.put<any[]>(`${environment.apiUrl}/page-master`, e);\r\n    }\r\n    else{\r\n      return this.http.post<any[]>(`${environment.apiUrl}/page-master`, e);\r\n    }\r\n  }\r\n\r\n  delete(e:any){\r\n    return this.http.delete<any[]>(`${environment.apiUrl}/page-master/`+ e?.id);\r\n  }\r\n  formbuilder(e:any){\r\n    this.router.navigate(['/formbuilder'], { queryParams: { ModuleID: e.id } });\r\n  }\r\n  tablebuilder(e:any){\r\n    this.router.navigate(['/tablebuilder'], { queryParams: { ModuleID: e.id } });\r\n  }\r\n  deleteSelected(e:any){\r\n    return this.http.post<any[]>(`${environment.apiUrl+this.baseServiceUrl}`+'/delete-all', e);\r\n  }\r\n\r\n  ImportCSV(e:any){\r\n    return this.http.post<any[]>(`${environment.apiUrl+this.baseServiceUrl}`+'/add-all', e);\r\n  }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  baseURL: 'http://207.180.233.17:10040',\r\n  //apiUrl: 'http://0d60-103-88-77-218.ngrok.io/api/v1',\r\n  apiUrl: 'http://localhost:10040/api/v1',\r\n  //apiUrl: 'http://192.168.18.7:10040/api/v1',\r\n //apiUrl: 'http://207.180.233.17:10040/api/v1',\r\n  webhookUrl: 'http://207.180.233.17:10040/webhook'\r\n}; \r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../_services';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n\r\n        const currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser) {\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n        return false;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '../_services';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            console.log(err);\r\n            if (err.status === 401) {\r\n                this.authenticationService.logout();\r\n                location.reload(true);\r\n            }\r\n\r\n\r\n            const error = err.error?.errorMessage || err.statusText;\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\r\n\r\nimport { User } from '../_models';\r\n\r\nconst users: User[] = [{ id: 1, email: 'test', password: 'test'}];\r\n\r\n@Injectable()\r\nexport class FakeBackendInterceptor implements HttpInterceptor {\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const { url, method, headers, body } = request;\r\n\r\n        // wrap in delayed observable to simulate server api call\r\n        return of(null)\r\n            .pipe(mergeMap(handleRoute))\r\n            .pipe(materialize()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\r\n            .pipe(delay(500))\r\n            .pipe(dematerialize());\r\n\r\n        function handleRoute() {\r\n            switch (true) {\r\n                case url.endsWith('/users/authenticate') && method === 'POST':\r\n                    return authenticate();\r\n                case url.endsWith('/users') && method === 'GET':\r\n                    return getUsers();\r\n                default:\r\n                    // pass through any requests not handled above\r\n                    return next.handle(request);\r\n            }    \r\n        }\r\n\r\n        // route functions\r\n\r\n        function authenticate() {\r\n            const { username, password } = body;\r\n            const user = users.find(x => x.email === username && x.password === password);\r\n            if (!user) return error('Username or password is incorrect');\r\n            return ok({\r\n                id: user.id,\r\n                username: user.email,\r\n                token: 'fake-jwt-token'\r\n            })\r\n        }\r\n\r\n        function getUsers() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n            return ok(users);\r\n        }\r\n\r\n        // helper functions\r\n\r\n        function ok(body?) {\r\n            return of(new HttpResponse({ status: 200, body }))\r\n        }\r\n\r\n        function error(message) {\r\n            return throwError({ error: { message } });\r\n        }\r\n\r\n        function unauthorized() {\r\n            return throwError({ status: 401, error: { message: 'Unauthorised' } });\r\n        }\r\n\r\n        function isLoggedIn() {\r\n            return headers.get('Authorization') === 'Bearer fake-jwt-token';\r\n        }\r\n    }\r\n}\r\n\r\nexport let fakeBackendProvider = {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: FakeBackendInterceptor,\r\n    multi: true\r\n};","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { environment } from '../../environments/environment';\r\nimport { AuthenticationService } from '../_services';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add auth header with jwt if user is logged in and request is to the api url\r\n        const currentUser = this.authenticationService.currentUserValue;\r\n        const isLoggedIn = currentUser && currentUser.token;\r\n        const isApiUrl = request.url.startsWith(environment.apiUrl);\r\n        if (isLoggedIn && isApiUrl) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${currentUser.token}`\r\n                }\r\n            });\r\n        }\r\n       \r\n        return next.handle(request);\r\n    }\r\n}","import { Directive, Input, HostBinding, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: 'img[fallback]'\r\n})\r\nexport class FallbackImgDirective {\r\n  @Input()\r\n  @HostBinding('src')\r\n  public src: string;\r\n\r\n  @Input() fallback: string;\r\n\r\n  @HostListener('error')\r\n  onError() {\r\n    this.src = this.fallback;\r\n  }\r\n\r\n  constructor() {\r\n      this.src = this.fallback = ''\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\nimport { IconSetService } from '@coreui/icons-angular';\r\nimport { freeSet } from '@coreui/icons';\r\n\r\n// import { ProfileSettingService } from './_services/_aaa_module/ProfileSetting.service'\r\nimport { RootService } from './_helpers/root.service'\r\n\r\n@Component({\r\n  // tslint:disable-next-line\r\n  selector: 'body',\r\n  template: '<router-outlet></router-outlet>',\r\n  providers: [IconSetService],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(\r\n    private router: Router,\r\n    public iconSet: IconSetService,\r\n\r\n    // private ProfileSettingService: ProfileSettingService,\r\n    private RootService: RootService,\r\n  ) {\r\n    // iconSet singleton\r\n    iconSet.icons = { ...freeSet };\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    // this.RootService.ProfileData = JSON.parse(localStorage.getItem(\"ProfileData\"));\r\n\r\n    // this.ProfileSettingService.getAll().subscribe((data:any)=>{\r\n    //   this.RootService.ProfileData = data?.results;\r\n    //   localStorage.setItem(\"ProfileData\", JSON.stringify(data?.results));\r\n    // })\r\n    this.router.events.subscribe((evt) => {\r\n      if (!(evt instanceof NavigationEnd)) {\r\n        return;\r\n      }\r\n      window.scrollTo(0, 0);\r\n    });\r\n  }\r\n}\r\n","import { INavData } from '@coreui/angular';\r\n\r\nexport const navItems: INavData[] = [\r\n  \r\n\r\n];\r\n","import {Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { navItems } from '../../_nav';\r\nimport { AuthenticationService, WebhooksService, UserService, FormAndTableService } from '../../_services';\r\nimport {MessageService} from 'primeng/api';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport {RootService} from '../../_helpers/root.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './default-layout.component.html',\r\n  providers: [MessageService]\r\n})\r\nexport class DefaultLayoutComponent implements OnInit, AfterViewInit {\r\n  public sidebarMinimized = true;\r\n  public navItems = navItems;\r\n\r\n  constructor(public RootService: RootService,private messageService: MessageService,private router: Router,  public authenticationService: AuthenticationService, private module: FormAndTableService, private user: UserService) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.user.userData = JSON.parse(localStorage.getItem('currentUser'));\r\n  }\r\n  ngAfterViewInit() {\r\n    this.module.getAllModuleByuserrole(this.user.userData['rol']).subscribe(\r\n      data => {\r\n        if(data['status'] == 1){\r\n          this.messageService.add({severity:'success', summary: data['message'], detail:''});\r\n          this.navItems  = this.unflatten(data['results']);\r\n          console.log(this.navItems);\r\n        }\r\n        else{\r\n          this.messageService.add({severity:'success', summary: 'Error:', detail:data['errorMessage']});\r\n        }\r\n      },\r\n      error => {this.messageService.add({severity:'success', summary: error, detail:''});}\r\n    );\r\n  }\r\n  unflatten(list:any)  {\r\n    var map = {}, node, roots = [], i;\r\n\r\n    for (i = 0; i < list.length; i += 1) {\r\n      map[list[i].id] = i; // initialize the map\r\n      if(list[i].parent == true){\r\n        list[i].children = []; // initialize the children\r\n      }\r\n      else{\r\n        list[i].linkProps = { queryParams: { 'ModuleID': list[i].id } }\r\n      }\r\n    }\r\n\r\n    for (i = 0; i < list.length; i += 1) {\r\n      node = list[i];\r\n      if (node.parentId !== 0) {\r\n        // if you have dangling branches check that map[node.parentId] exists\r\n        list[map[node.parentId]].children.push(node);\r\n      } else {\r\n        roots.push(node);\r\n      }\r\n    }\r\n\r\n    roots.sort(function(a,b){\r\n        return a.sortId - b.sortId;\r\n        }\r\n    );\r\n    return roots;\r\n  }\r\n\r\n  toggleMinimize(e) {\r\n    this.sidebarMinimized = e;\r\n  }\r\n  logout(){\r\n    this.authenticationService.logout();\r\n  }\r\n\r\n  Setting(){\r\n    this.router.navigate(['masterwindow/settings']);\r\n  }\r\n}\r\n","export default \"<!-- changed profileData in navbarBrandFull -->\\r\\n<app-header\\r\\n  [navbarBrandRouterLink]=\\\"['/dashboard']\\\"\\r\\n  [fixed]=\\\"true\\\"\\r\\n  [navbarBrandFull]=\\\"{src: 'assets/img/brand/itzLogo.png', width: 89, height: 25, alt: 'Logo'}\\\"\\r\\n  [navbarBrandMinimized]=\\\"{src: 'assets/img/avatars/6.jpg', width: 30, height: 30, alt: 'Logo'}\\\"\\r\\n  [sidebarToggler]=\\\"'lg'\\\"\\r\\n  [asideMenuToggler]=\\\"'lg'\\\">\\r\\n  <ul class=\\\"nav navbar-nav d-md-down-none\\\">\\r\\n    <li class=\\\"nav-item px-3\\\">\\r\\n      <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">Dashboard</a>\\r\\n    </li>\\r\\n  </ul>\\r\\n  <ul class=\\\"nav navbar-nav ml-auto\\\">\\r\\n    <li class=\\\"nav-item d-md-down-none\\\">\\r\\n      <a class=\\\"nav-link\\\" href=\\\"#\\\"><i class=\\\"icon-bell\\\"></i><span class=\\\"badge badge-pill badge-danger\\\">0</span></a>\\r\\n    </li>\\r\\n\\r\\n    <li class=\\\"nav-item dropdown\\\" dropdown placement=\\\"bottom right\\\">\\r\\n      <a class=\\\"nav-link\\\" data-toggle=\\\"dropdown\\\" href=\\\"#\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" dropdownToggle (click)=\\\"false\\\">\\r\\n        <img src=\\\"assets/img/avatars/6.jpg\\\" class=\\\"img-avatar\\\" alt=\\\"admin@bootstrapmaster.com\\\"/>\\r\\n      </a>\\r\\n      <div class=\\\"dropdown-menu dropdown-menu-right\\\"  aria-labelledby=\\\"simple-dropdown\\\">\\r\\n        <div class=\\\"dropdown-header text-center\\\"><strong>Account</strong></div>\\r\\n          <a *ngIf=\\\"this.authenticationService.currentUserValue?.rol == 1\\\" class=\\\"dropdown-item\\\"  [routerLink]=\\\"['/masterwindow/settings']\\\" href=\\\"#\\\"><i class=\\\"fa fa-wrench\\\"></i> Setting</a>\\r\\n          <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\" href=\\\"#\\\"><i class=\\\"fa fa-lock\\\"></i> Logout</a>\\r\\n        </div>\\r\\n    </li>\\r\\n  </ul>\\r\\n</app-header>\\r\\n<div class=\\\"app-body\\\">\\r\\n  <app-sidebar #appSidebar [fixed]=\\\"true\\\"  [display]=\\\"'lg'\\\" [minimized]=\\\"sidebarMinimized\\\" (minimizedChange)=\\\"toggleMinimize($event)\\\">\\r\\n    <app-sidebar-nav  [navItems]=\\\"navItems\\\" [perfectScrollbar] [disabled]=\\\"appSidebar.minimized\\\"></app-sidebar-nav>\\r\\n    <app-sidebar-minimizer></app-sidebar-minimizer>\\r\\n  </app-sidebar>\\r\\n  <!-- Main content -->\\r\\n  <main class=\\\"main\\\">\\r\\n    <!-- Breadcrumb -->\\r\\n    <!-- breaking change 'cui-breadcrumb' -->\\r\\n    <cui-breadcrumb>\\r\\n      <!-- Breadcrumb Menu-->\\r\\n      <li class=\\\"breadcrumb-menu d-md-down-none\\\">\\r\\n        <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Button group with nested dropdown\\\">\\r\\n          <a class=\\\"btn\\\" href=\\\"#\\\"><i class=\\\"icon-speech\\\"></i></a>\\r\\n        </div>\\r\\n      </li>\\r\\n    </cui-breadcrumb>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <router-outlet ></router-outlet>\\r\\n    </div><!-- /.container-fluid -->\\r\\n  </main>\\r\\n  <app-aside [fixed]=\\\"true\\\" [display]=\\\"false\\\" [ngClass]=\\\"'test'\\\">\\r\\n\\r\\n  </app-aside>\\r\\n</div>\\r\\n<!--<app-footer>\\r\\n\\r\\n</app-footer>-->\\r\\n<!--<p-toast position=\\\"top-center\\\"></p-toast>-->\\r\\n\\r\\n<ng-http-loader></ng-http-loader>\\r\\n\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: '404.component.html'\r\n})\r\nexport class P404Component {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","export default \"<div class=\\\"app flex-row align-items-center\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <div class=\\\"clearfix\\\">\\r\\n          <h1 class=\\\"float-left display-3 mr-4\\\">404</h1>\\r\\n          <h4 class=\\\"pt-3\\\">Oops! You're lost.</h4>\\r\\n          <p class=\\\"text-muted\\\">The page you are looking for was not found.</p>\\r\\n        </div>\\r\\n        <div class=\\\"input-prepend input-group\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n          </div>\\r\\n          <input id=\\\"prependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"text\\\" placeholder=\\\"What are you looking for?\\\">\\r\\n          <span class=\\\"input-group-append\\\">\\r\\n            <button class=\\\"btn btn-info\\\" type=\\\"button\\\">Search</button>\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: '500.component.html'\r\n})\r\nexport class P500Component {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","export default \"<div class=\\\"app flex-row align-items-center\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row justify-content-center\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <div class=\\\"clearfix\\\">\\r\\n          <h1 class=\\\"float-left display-3 mr-4\\\">500</h1>\\r\\n          <h4 class=\\\"pt-3\\\">Houston, we have a problem!</h4>\\r\\n          <p class=\\\"text-muted\\\">The page you are looking for is temporarily unavailable.</p>\\r\\n        </div>\\r\\n        <div class=\\\"input-prepend input-group\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\r\\n          </div>\\r\\n          <input id=\\\"prependedInput\\\" class=\\\"form-control\\\" size=\\\"16\\\" type=\\\"text\\\" placeholder=\\\"What are you looking for?\\\">\\r\\n          <span class=\\\"input-group-append\\\">\\r\\n            <button class=\\\"btn btn-info\\\" type=\\\"button\\\">Search</button>\\r\\n          </span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"app-body\\\">\\r\\n  <main class=\\\"main d-flex align-items-center\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-8 mx-auto\\\">\\r\\n          <div class=\\\"card-group\\\">\\r\\n            <div class=\\\"card p-4\\\">\\r\\n              <div class=\\\"card-body\\\">\\r\\n                <form [formGroup]=\\\"loginForm\\\">\\r\\n                  <h1>Login</h1>\\r\\n                  <p class=\\\"text-muted\\\">Sign In to your account</p>\\r\\n                  <p style=\\\"color: red;\\\">{{error}}</p>\\r\\n                  <div class=\\\"input-group mb-3\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\"><i class=\\\"icon-user\\\"></i></span>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"userId\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.userId.errors }\\\" placeholder=\\\"Username\\\" autocomplete=\\\"username\\\" required>\\r\\n                    <div *ngIf=\\\"submitted && f.userId.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"f.userId.errors.required\\\">Email is required</div>\\r\\n                  </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"input-group mb-4\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\r\\n                    </div>\\r\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" placeholder=\\\"Password\\\" autocomplete=\\\"current-password\\\" required>\\r\\n                    <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                      <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\r\\n                  </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-6\\\">\\r\\n                      <button type=\\\"button\\\" (click)=\\\"onSubmit()\\\" class=\\\"btn btn-primary px-4\\\">Login</button>\\r\\n                      <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger mt-3 mb-0\\\">{{error}}</div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-6 text-right\\\">\\r\\n                      <button type=\\\"button\\\" class=\\\"btn btn-link px-0\\\">Forgot password?</button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </form>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </main>\\r\\n</div>\\r\\n<!--<p-toast position=\\\"top-center\\\"></p-toast>-->\";","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\nimport { AuthenticationService, WebhooksService } from '../../_services';\r\nimport {MessageService} from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: 'login.component.html',\r\n  providers: [MessageService]\r\n})\r\nexport class LoginComponent {\r\n    loginForm: FormGroup;\r\n    loading = false;\r\n    submitted = false;\r\n    returnUrl: string='/dashboard';\r\n    error = '';\r\n\r\n    constructor(\r\n        private formBuilder: FormBuilder,\r\n        private route: ActivatedRoute,\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService,\r\n        private messageService: MessageService,\r\n        private webhook: WebhooksService\r\n    ) { \r\n        // redirect to home if already logged in\r\n        if (this.authenticationService.currentUserValue) { \r\n            this.router.navigate(['/dashboard']);\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.loginForm = this.formBuilder.group({\r\n            userId: ['', Validators.required],\r\n            password: ['', Validators.required]\r\n        });\r\n\r\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '';\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get f() { return this.loginForm.controls; }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n\r\n        // stop here if form is invalid\r\n        if (this.loginForm.invalid) {\r\n            return;\r\n        }\r\n        this.error = '';\r\n\r\n        this.loading = true;\r\n        this.authenticationService.login(this.f.userId.value, this.f.password.value)\r\n            .pipe(first())\r\n            .subscribe(\r\n                data => {\r\n                    if(data['status'] == 1){\r\n                        localStorage.removeItem('errorCount');\r\n                        var returnval = this.returnUrl.split('?ModuleID=')\r\n                        console.log(returnval);\r\n                        //this.router.navigate([this.returnUrl]);\r\n                        this.router.navigate([returnval[0]], { queryParams: { ModuleID: returnval[1] } });\r\n                    }\r\n                    else{\r\n                        this.error = data['data'];\r\n                        this.messageService.add({severity:'error', summary: 'Login Failed', detail:this.error});\r\n                        this.loading = false;\r\n                        var errorcount:any = localStorage.getItem('errorCount');\r\n                        errorcount = (errorcount*1) + 1;\r\n                        localStorage.setItem('errorCount', errorcount); \r\n                    }\r\n                    \r\n                },\r\n                error => {\r\n                    this.error = error;\r\n                    this.messageService.add({severity:'error', summary: 'Login Failed', detail:this.error});\r\n                    this.loading = false;\r\n                    var errorcount:any = localStorage.getItem('errorCount');\r\n                        errorcount = (errorcount*1) + 1;\r\n                        localStorage.setItem('errorCount', errorcount);\r\n                });\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: 'register.component.html'\r\n})\r\nexport class RegisterComponent {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","export default \"<div class=\\\"app-body\\\">\\r\\n  <main class=\\\"main d-flex align-items-center\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 mx-auto\\\">\\r\\n          <div class=\\\"card mx-4\\\">\\r\\n            <div class=\\\"card-body p-4\\\">\\r\\n              <form>\\r\\n                <h1>Register</h1>\\r\\n                <p class=\\\"text-muted\\\">Create your account</p>\\r\\n                <div class=\\\"input-group mb-3\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"icon-user\\\"></i></span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" autocomplete=\\\"username\\\" required>\\r\\n                </div>\\r\\n                <div class=\\\"input-group mb-3\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\">@</span>\\r\\n                  </div>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" autocomplete=\\\"email\\\" required>\\r\\n                </div>\\r\\n                <div class=\\\"input-group mb-3\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\r\\n                  </div>\\r\\n                  <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" autocomplete=\\\"new-password\\\" required>\\r\\n                </div>\\r\\n                <div class=\\\"input-group mb-4\\\">\\r\\n                  <div class=\\\"input-group-prepend\\\">\\r\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"icon-lock\\\"></i></span>\\r\\n                  </div>\\r\\n                  <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Repeat password\\\" autocomplete=\\\"new-password\\\" required>\\r\\n                </div>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-block btn-success\\\">Create Account</button>\\r\\n              </form>\\r\\n            </div>\\r\\n            <div class=\\\"card-footer p-4\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-6\\\">\\r\\n                  <button class=\\\"btn btn-block btn-facebook\\\" type=\\\"button\\\"><span>facebook</span></button>\\r\\n                </div>\\r\\n                <div class=\\\"col-6\\\">\\r\\n                  <button class=\\\"btn btn-block btn-twitter\\\" type=\\\"button\\\"><span>twitter</span></button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </main>\\r\\n</div>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n// Import Containers\r\nimport { DefaultLayoutComponent } from './containers';\r\nimport { LoginComponent } from './views/login/login.component';\r\nimport { P404Component } from './views/error/404.component';\r\nimport { AuthGuard } from './_helpers';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'dashboard',\r\n    pathMatch: 'full',\r\n  },\r\n  { path: 'login', component: LoginComponent},\r\n  {\r\n    path: '',\r\n    component: DefaultLayoutComponent,\r\n    canActivate: [AuthGuard],\r\n    data: {\r\n      title: 'Home'\r\n    },\r\n    children: [\r\n      {\r\n        path: 'dashboard',\r\n        loadChildren: () => import('./views/dashboard/dashboard.module').then(m => m.DashboardModule)\r\n      },\r\n      {\r\n        path: 'formbuilder',\r\n        loadChildren: () => import('./views/formbuilder/formbuilder.module').then(m => m.FormbuilderModule)\r\n      },\r\n      {\r\n        path: 'tablebuilder',\r\n        loadChildren: () => import('./views/tablebuilder/tablebuilder.module').then(m => m.TablebuilderModule)\r\n      },\r\n      {\r\n        path: 'masterwindow',\r\n        loadChildren: () => import('./views/masterwindow/masterwindow.module').then(m => m.MasterwindowModule)\r\n      },\r\n    ]\r\n  },\r\n  { path: '**', component: P404Component }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' }) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, Injector, InjectionToken } from '@angular/core';\r\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { PERFECT_SCROLLBAR_CONFIG } from 'ngx-perfect-scrollbar';\r\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\r\nimport { JwtInterceptor, ErrorInterceptor } from './_helpers';\r\nimport { IconModule, IconSetModule, IconSetService } from '@coreui/icons-angular';\r\nimport { NgxFileDropModule } from 'ngx-file-drop';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {EditorModule} from 'primeng/editor';\r\nimport {InputNumberModule} from 'primeng/inputnumber';\r\nimport {ButtonModule} from 'primeng/button';\r\nimport {ToggleButtonModule} from 'primeng/togglebutton';\r\nimport { SortablejsModule } from 'ngx-sortablejs';\r\nimport { NgHttpLoaderModule } from 'ng-http-loader';\r\nimport { FallbackImgDirective} from './_helpers/fallback-img.directive';\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n  suppressScrollX: true\r\n};\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\n// Import containers\r\nimport { DefaultLayoutComponent } from './containers';\r\n\r\nimport { P404Component } from './views/error/404.component';\r\nimport { P500Component } from './views/error/500.component';\r\nimport { LoginComponent } from './views/login/login.component';\r\nimport { RegisterComponent } from './views/register/register.component';\r\n\r\nimport {\r\n  UserService,\r\n  ModuleServiceService,\r\n  FormAndTableService,\r\n  RolePermissionService,\r\n  UserRoleMasterService,\r\n  ProfileSettingService,\r\n\r\n} from './_services';\r\n\r\n\r\n\r\nconst APP_CONTAINERS = [\r\n  DefaultLayoutComponent\r\n];\r\n\r\nimport {\r\n  AppAsideModule,\r\n  AppBreadcrumbModule,\r\n  AppHeaderModule,\r\n  AppFooterModule,\r\n  AppSidebarModule,\r\n} from '@coreui/angular';\r\n\r\n// Import routing module\r\nimport { AppRoutingModule } from './app.routing';\r\nimport {FileUploadModule} from 'primeng/fileupload';\r\n\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    AppAsideModule,\r\n    AppBreadcrumbModule.forRoot(),\r\n    AppFooterModule,\r\n    AppHeaderModule,\r\n    ReactiveFormsModule,\r\n    ButtonModule,\r\n    ToggleButtonModule,\r\n    EditorModule,\r\n    InputNumberModule,\r\n    SortablejsModule.forRoot({ animation: 150 }),\r\n    FormsModule,\r\n    AppSidebarModule,\r\n    PerfectScrollbarModule,\r\n    IconModule,\r\n    HttpClientModule,\r\n    NgxFileDropModule,\r\n    HttpClientModule, // <============ (Perform HTTP requests with this module)\r\n    NgHttpLoaderModule.forRoot(),\r\n    FileUploadModule,\r\n    IconSetModule.forRoot(),\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    ...APP_CONTAINERS,\r\n    P404Component,\r\n    P500Component,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    FallbackImgDirective,\r\n  ],\r\n  providers: [\r\n    {provide: 'UserService', useExisting: UserService},\r\n    {provide: 'FormAndTableService', useExisting: FormAndTableService},\r\n    {provide: 'ModuleService', useExisting: ModuleServiceService},\r\n    {provide: 'RolePermissionService', useExisting: RolePermissionService},\r\n    {provide: 'UserRoleMasterService', useExisting: UserRoleMasterService},\r\n    {provide: 'ProfileSettingService', useExisting: ProfileSettingService},\r\n\r\n\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n    {\r\n      provide: LocationStrategy,\r\n      useClass: HashLocationStrategy\r\n    },\r\n    IconSetService\r\n  ],\r\n  bootstrap: [ AppComponent ]\r\n})\r\nexport class AppModule {\r\n\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule, {\r\n  useJit: true,\r\n  preserveWhitespaces: true\r\n})\r\n  .catch(err => console.log(err));\r\n"]}