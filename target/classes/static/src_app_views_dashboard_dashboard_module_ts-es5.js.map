{"version":3,"sources":["webpack:///node_modules/@coreui/coreui-plugin-chartjs-custom-tooltips/dist/umd/custom-tooltips.js","webpack:///src/app/views/dashboard/dashboard.component.ts","webpack:///src/app/views/dashboard/dashboard.component.html","webpack:///src/app/views/dashboard/dashboard-routing.module.ts","webpack:///src/app/containers/base-dashboard/base-dashboard.component.html","webpack:///src/app/containers/base-dashboard/base-dashboard.component.ts","webpack:///src/app/containers/base-dashboard/base-dashboard.component.scss","webpack:///src/app/views/dashboard/dashboard.module.ts"],"names":["exports","CustomTooltips","tooltipModel","_idMaker","_canvasId","_this","this","ClassName","Selector","DIV","SPAN","TOOLTIP","_chart","canvas","id","Math","random","toString","tooltip","document","getElementById","createElement","className","parentNode","appendChild","opacity","classList","remove","yAlign","add","body","titleLines","title","tooltipHeader","forEach","tooltipHeaderTitle","innerHTML","tooltipBody","map","item","lines","i","tooltipBodyItem","colors","labelColors","tooltipBodyItemColor","style","backgroundColor","split","length","tooltipBodyItemLabel","tooltipBodyItemValue","pop","_tooltipBodyItemValue","position","getBoundingClientRect","positionY","offsetTop","positionLeft","offsetLeft","caretX","positionTop","caretY","halfWidth","width","left","top","customTooltips","Object","defineProperty","value","DashboardComponent","dData","borderColor","e","template","routes","path","component","data","DashboardRoutingModule","imports","BaseDashboardComponent","DbData","DbValue","type","onclickEvent","lineOptions","tooltips","enabled","custom","maintainAspectRatio","scales","xAxes","gridLines","color","zeroLineColor","ticks","fontSize","fontColor","yAxes","display","min","max","elements","line","borderWidth","point","radius","hitRadius","hoverRadius","legend","barOptions","barPercentage","flatLineOptions","lineChart1Data","label","lineChart1Labels","console","log","Legend","chatColor","priColor","secColor","selector","DashboardModule","injector","declarations","providers"],"mappings":"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","file":"x","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global['custom-tooltips'] = {}));\n}(this, function (exports) { 'use strict';\n\n  /**\n   * --------------------------------------------------------------------------\n   * CoreUI Plugins - Custom Tooltips for Chart.js (v1.3.1): custom-tooltips.js\n   * Licensed under MIT (https://coreui.io/license)\n   * --------------------------------------------------------------------------\n   */\n  function CustomTooltips(tooltipModel) {\n    var _this = this;\n\n    // Add unique id if not exist\n    var _setCanvasId = function _setCanvasId() {\n      var _idMaker = function _idMaker() {\n        var _hex = 16;\n        var _multiplier = 0x10000;\n        return ((1 + Math.random()) * _multiplier | 0).toString(_hex);\n      };\n\n      var _canvasId = \"_canvas-\" + (_idMaker() + _idMaker());\n\n      _this._chart.canvas.id = _canvasId;\n      return _canvasId;\n    };\n\n    var ClassName = {\n      ABOVE: 'above',\n      BELOW: 'below',\n      CHARTJS_TOOLTIP: 'chartjs-tooltip',\n      NO_TRANSFORM: 'no-transform',\n      TOOLTIP_BODY: 'tooltip-body',\n      TOOLTIP_BODY_ITEM: 'tooltip-body-item',\n      TOOLTIP_BODY_ITEM_COLOR: 'tooltip-body-item-color',\n      TOOLTIP_BODY_ITEM_LABEL: 'tooltip-body-item-label',\n      TOOLTIP_BODY_ITEM_VALUE: 'tooltip-body-item-value',\n      TOOLTIP_HEADER: 'tooltip-header',\n      TOOLTIP_HEADER_ITEM: 'tooltip-header-item'\n    };\n    var Selector = {\n      DIV: 'div',\n      SPAN: 'span',\n      TOOLTIP: (this._chart.canvas.id || _setCanvasId()) + \"-tooltip\"\n    };\n    var tooltip = document.getElementById(Selector.TOOLTIP);\n\n    if (!tooltip) {\n      tooltip = document.createElement('div');\n      tooltip.id = Selector.TOOLTIP;\n      tooltip.className = ClassName.CHARTJS_TOOLTIP;\n\n      this._chart.canvas.parentNode.appendChild(tooltip);\n    } // Hide if no tooltip\n\n\n    if (tooltipModel.opacity === 0) {\n      tooltip.style.opacity = 0;\n      return;\n    } // Set caret Position\n\n\n    tooltip.classList.remove(ClassName.ABOVE, ClassName.BELOW, ClassName.NO_TRANSFORM);\n\n    if (tooltipModel.yAlign) {\n      tooltip.classList.add(tooltipModel.yAlign);\n    } else {\n      tooltip.classList.add(ClassName.NO_TRANSFORM);\n    } // Set Text\n\n\n    if (tooltipModel.body) {\n      var titleLines = tooltipModel.title || [];\n      var tooltipHeader = document.createElement(Selector.DIV);\n      tooltipHeader.className = ClassName.TOOLTIP_HEADER;\n      titleLines.forEach(function (title) {\n        var tooltipHeaderTitle = document.createElement(Selector.DIV);\n        tooltipHeaderTitle.className = ClassName.TOOLTIP_HEADER_ITEM;\n        tooltipHeaderTitle.innerHTML = title;\n        tooltipHeader.appendChild(tooltipHeaderTitle);\n      });\n      var tooltipBody = document.createElement(Selector.DIV);\n      tooltipBody.className = ClassName.TOOLTIP_BODY;\n      var tooltipBodyItems = tooltipModel.body.map(function (item) {\n        return item.lines;\n      });\n      tooltipBodyItems.forEach(function (item, i) {\n        var tooltipBodyItem = document.createElement(Selector.DIV);\n        tooltipBodyItem.className = ClassName.TOOLTIP_BODY_ITEM;\n        var colors = tooltipModel.labelColors[i];\n        var tooltipBodyItemColor = document.createElement(Selector.SPAN);\n        tooltipBodyItemColor.className = ClassName.TOOLTIP_BODY_ITEM_COLOR;\n        tooltipBodyItemColor.style.backgroundColor = colors.backgroundColor;\n        tooltipBodyItem.appendChild(tooltipBodyItemColor);\n\n        if (item[0].split(':').length > 1) {\n          var tooltipBodyItemLabel = document.createElement(Selector.SPAN);\n          tooltipBodyItemLabel.className = ClassName.TOOLTIP_BODY_ITEM_LABEL;\n          tooltipBodyItemLabel.innerHTML = item[0].split(': ')[0];\n          tooltipBodyItem.appendChild(tooltipBodyItemLabel);\n          var tooltipBodyItemValue = document.createElement(Selector.SPAN);\n          tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          tooltipBodyItemValue.innerHTML = item[0].split(': ').pop();\n          tooltipBodyItem.appendChild(tooltipBodyItemValue);\n        } else {\n          var _tooltipBodyItemValue = document.createElement(Selector.SPAN);\n\n          _tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          _tooltipBodyItemValue.innerHTML = item[0];\n          tooltipBodyItem.appendChild(_tooltipBodyItemValue);\n        }\n\n        tooltipBody.appendChild(tooltipBodyItem);\n      });\n      tooltip.innerHTML = '';\n      tooltip.appendChild(tooltipHeader);\n      tooltip.appendChild(tooltipBody);\n    }\n\n    var position = this._chart.canvas.getBoundingClientRect();\n\n    var positionY = this._chart.canvas.offsetTop;\n    var positionX = this._chart.canvas.offsetLeft;\n    var positionLeft = positionX + tooltipModel.caretX;\n    var positionTop = positionY + tooltipModel.caretY; // eslint-disable-next-line\n\n    var halfWidth = tooltipModel.width / 2;\n\n    if (positionLeft + halfWidth > position.width) {\n      positionLeft -= halfWidth;\n    } else if (positionLeft < halfWidth) {\n      positionLeft += halfWidth;\n    } // Display, position, and set styles for font\n\n\n    tooltip.style.opacity = 1;\n    tooltip.style.left = positionLeft + \"px\";\n    tooltip.style.top = positionTop + \"px\";\n  }\n\n  var customTooltips = CustomTooltips; // TODO: camel-case\n\n  exports.CustomTooltips = CustomTooltips;\n  exports.customTooltips = customTooltips;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=custom-tooltips.js.map\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: 'dashboard.component.html'\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  public dData:any [];\r\n\r\n  ngOnInit(){\r\n    this.dData = [\r\n      { \r\n        \"size\": 3, \r\n        \"title\": \"DataTest\", \r\n        \"baseType\":'top-Card', \r\n        \"type\": 'line', \r\n        \"Legend\": false,\r\n        \"cardColor\": [{\r\n          \"priColor\": '#2982cc',\r\n          \"secColor\": '#39f'\r\n        }],\r\n        \"chatColor\": [{\r\n          backgroundColor: '#fff0',\r\n          borderColor: 'rgba(255,255,255,.55)'\r\n        }],\r\n      },\r\n      { \r\n        \"size\": 3, \r\n        \"title\": \"DataTest\", \r\n        \"baseType\":'top-Card', \r\n        \"type\": 'flatline', \r\n        \"Legend\": false,\r\n        \"cardColor\": [{\r\n          \"priColor\": '#1f1498',\r\n          \"secColor\": '#321fdb'\r\n        }],\r\n        \"chatColor\": [{\r\n          backgroundColor: '#fff0',\r\n          borderColor: 'rgba(255,255,255,.55)'\r\n        }],\r\n      },\r\n      { \r\n        \"size\": 3, \r\n        \"title\": \"DataTest\", \r\n        \"baseType\":'top-Card', \r\n        \"type\": 'line', \r\n        \"Legend\": false,\r\n        \"cardColor\": [{\r\n          \"priColor\": '#d93737',\r\n          \"secColor\": '#e55353'\r\n        }],\r\n        \"chatColor\": [{\r\n          backgroundColor: '#fff0',\r\n          borderColor: 'rgba(255,255,255,.55)'\r\n        }],\r\n      },\r\n\r\n      { \r\n        \"size\": 3, \r\n        \"title\": \"DataTest\", \r\n        \"baseType\":'top-Card', \r\n        \"type\": 'bar', \r\n        \"Legend\": false,\r\n        \"cardColor\": [{\r\n          \"priColor\": '#f6960b',\r\n          \"secColor\": '#f9b115'\r\n        }],\r\n        \"chatColor\": [{\r\n          backgroundColor: 'rgba(255,255,255, 0)',\r\n          borderColor: 'rgba(255,255,255,.55)'\r\n        }],\r\n      }\r\n    ]\r\n  }\r\n\r\n  onclickEventForm(e:any){\r\n\r\n  }\r\n}\r\n","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <app-base-dashboard #Db [DbData]=\\\"dData\\\"  [type]=\\\"''\\\" (onclickEvent)=\\\"onclickEventForm($event)\\\"></app-base-dashboard>\\r\\n</div>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { DashboardComponent } from './dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardComponent,\r\n    data: {\r\n      title: 'Dashboard'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule {}\r\n","export default \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n      <div *ngFor=\\\"let dData of DbData\\\" class=\\\"col-sm-{{dData.size}} mt-3\\\">\\r\\n\\r\\n        <!--topcard-->\\r\\n        <div class=\\\"card text-white\\\" *ngIf=\\\"dData.baseType == 'top-Card'\\\" [style.background-color]=\\\"dData.cardColor[0].priColor\\\" [style.background]=\\\"returnGradient(dData.cardColor[0])\\\">\\r\\n          <div class=\\\"card-body pb-0\\\">\\r\\n            <div class=\\\"text-value\\\">9.823</div>\\r\\n            <div>{{dData.title}}</div>\\r\\n          </div>\\r\\n          <div class=\\\"chart-wrapper mt-3 mx-3\\\" style=\\\"height:70px;\\\">\\r\\n            <canvas baseChart class=\\\"chart\\\" [datasets]=\\\"lineChart1Data\\\" [labels]=\\\"lineChart1Labels\\\" [options]=\\\"returnOption(dData)\\\" [colors]=\\\"returnChatColor(dData)\\\" [legend]=\\\"returnChatLegend(dData)\\\" [chartType]=\\\"returnChatType(dData)\\\"></canvas>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!--topcard-->\\r\\n        \\r\\n      </div>\\r\\n    </div>\\r\\n</div>\";","import { Component,ViewChild, ElementRef, OnInit, Input, AfterViewInit ,Output, EventEmitter, ChangeDetectorRef, OnChanges } from '@angular/core';\r\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips';\r\n\r\n@Component({\r\n  selector: 'app-base-dashboard',\r\n  templateUrl: './base-dashboard.component.html',\r\n  styleUrls: ['./base-dashboard.component.scss']\r\n})\r\nexport class BaseDashboardComponent implements OnInit {\r\n\r\n  @Input() DbData: any = [];\r\n  @Input() DbValue: any = [];\r\n  @Input() type: string = '';\r\n  @Output() onclickEvent = new EventEmitter<string>();\r\n\r\n  public lineOptions: any = {tooltips: {enabled: false,custom: CustomTooltips}, maintainAspectRatio: false, scales: { xAxes: [{ gridLines: { color: 'transparent', zeroLineColor: 'transparent' }, ticks: { fontSize: 2, fontColor: 'transparent', }  }], yAxes: [{ display: false, ticks: { display: false, min: 40 - 5, max: 84 + 5, } }], }, elements: { line: { borderWidth: 1 }, point: { radius: 4, hitRadius: 10, hoverRadius: 4, }, }, legend: { display: false } };\r\n  public barOptions: any = { tooltips: { enabled: false, custom: CustomTooltips }, maintainAspectRatio: false, scales: { xAxes: [{ display: false, barPercentage: 0.6, }], yAxes: [{ display: false }] }, legend: { display: false } };\r\n  public flatLineOptions: any = { tooltips: { enabled: false, custom: CustomTooltips }, maintainAspectRatio: false, scales: { xAxes: [{ display: false }], yAxes: [{ display: false }] }, elements: { line: { borderWidth: 2 }, point: { radius: 0, hitRadius: 10, hoverRadius: 4, }, }, legend: { display: false } };\r\n\r\n  public lineChart1Data: Array<any> = [\r\n    {\r\n      data: [65, 59, 84, 84, 51, 55, 40],\r\n      label: 'Series A'\r\n    },\r\n  ];\r\n  public lineChart1Labels: Array<any> = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\r\n\r\n\r\n  constructor( ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.DbData)\r\n  }\r\n\r\n  returnChatLegend(e:any){\r\n    return e.Legend;\r\n  }\r\n\r\n  returnChatType(e:any){\r\n    if(e.type == 'flatline'){\r\n      return 'line'\r\n    }\r\n    return e.type;\r\n  }\r\n\r\n  returnChatColor(e:any){\r\n    return e.chatColor;\r\n  }\r\n\r\n  returnOption(e:any){\r\n    if(e.type == 'line'){\r\n      return this.lineOptions;\r\n    }\r\n    else if(e.type == 'bar'){\r\n      return this.barOptions\r\n    }\r\n    else if(e.type == 'flatline'){\r\n      return this.flatLineOptions;\r\n    }\r\n  }\r\n\r\n  returnGradient(e:any){\r\n    return 'linear-gradient(45deg, '+e.priColor+' 0%,  '+e.secColor+' 100%)';\r\n  }\r\n\r\n}\r\n","export default \"\";","import { NgModule, InjectionToken, Injector } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { FormComponent } from '../../containers/form/form.component';\r\nimport { DatatableComponent } from '../../containers/datatable/datatable.component';\r\nimport { PrimengcompModule } from '../../primengcomp/primengcomp.module';\r\nimport { RolepermissionComponent } from '../rolepermission/rolepermission.component';\r\nimport { NgxFileDropModule } from 'ngx-file-drop';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { SortablejsModule } from 'ngx-sortablejs';\r\n\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { BaseDashboardComponent } from '../../containers/base-dashboard/base-dashboard.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DashboardComponent, \r\n    FormComponent,\r\n    DatatableComponent,\r\n    RolepermissionComponent,\r\n    BaseDashboardComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    DashboardRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    PrimengcompModule,\r\n    NgxFileDropModule,\r\n    ChartsModule,\r\n    SortablejsModule\r\n  ],\r\n  providers: [\r\n  ]\r\n})\r\nexport class DashboardModule {\r\n  static injector: Injector;\r\n  constructor(injector: Injector) {\r\n    DashboardModule.injector = injector;\r\n  }\r\n}\r\n"]}