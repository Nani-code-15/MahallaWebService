(self.webpackChunk_coreui_coreui_free_angular_admin_template=self.webpackChunk_coreui_coreui_free_angular_admin_template||[]).push([["src_app_views_masterwindow_masterwindow_module_ts"],{81362:function(e,t,r){"use strict";r.r(t),r.d(t,{MasterwindowModule:function(){return x}});var a=r(64762),i=r(33018),s=r(38583),o=r(90665),l=r(9517),n=r(15574),d=r(75298),c=r(96255),m=r(73495),h=r(33013),p=r(91841),u=r(49457);let b=class{constructor(e,t,r,a,i,s,o,l,n){this.route=e,this.router=t,this.tableandform=r,this.cd=a,this.user=i,this.injector=s,this.messageService=o,this.confirmationService=l,this.http=n,this.files=[],this.ModuleID="",this.displayDialog=!1,this.displayDialog2=!1,this.displayView=!1,this.virtualdata=[],this.FormData=[],this.formValue=[],this.headersRow=[],this.csvRecordsArray=[],this.tableSchema=[],this.OtherOptions={},this.viewData={},this.router.routeReuseStrategy.shouldReuseRoute=()=>!1}onclickEvent(e){switch(e.action){case"edit":this.editdata(e);break;case"view":this.viewdata(e);break;case"delete":this.deletedata(e);break;case"deleteSelected":this.deleteSelected(e.data);break;default:this.onclickEventFormWithNoAction(e)}}viewdata(e){this.displayView=!0,this.viewData=null==e?void 0:e.data,console.log(this.tableSchema)}deleteSelected(e){this.confirmationService.confirm({message:"Are you sure that you want to perform this action?",accept:()=>{this.service.deleteSelected(e).subscribe(e=>{this.table.refreshTable(),this.Form.resetForm(),this.messageService.add({severity:"success",summary:e.message,detail:""}),this.cd.detectChanges()},e=>{})}})}createNew(){this.Form.resetForm(),this.Form.editScreen=!1,this.displayDialog=!0}editdata(e){this.displayDialog=!0,this.Form.editScreen=!0,this.Form.updateAngForm(e.data)}deletedata(e){this.confirmationService.confirm({message:"Are you sure that you want to perform this action?",accept:()=>{this.onclickEventForm(e)}})}showDialogMaximized(e){setTimeout(()=>{document.getElementsByClassName("pi-window-maximize")[0];setTimeout(()=>{},0)},0)}ngOnInit(){this.tableSchema.mainschema=[],this.tableSchema.buttonSchema=[],this.pageTitle=this.route.snapshot.data.title,this.ModuleID=this.route.snapshot.queryParams.ModuleID||"",""!==this.ModuleID?this.tableandform.getAllModuleById(this.ModuleID).subscribe(e=>{this.ModuleData=e.results.pageMaster,""!==this.ModuleData.options&&(this.OtherOptions=JSON.parse(this.ModuleData.options),this.tableSchema.OtherOptions=JSON.parse(this.ModuleData.options)),this.tableSchema.buttonSchema=e.results.tableButtonSchema,this.tableSchema.mainschema=e.results.tableMainSchema,this.tableSchema.roleMasterPrm=e.results.roleMasterPrm,this.tableSchema.serviceName=this.ModuleData.serviceName,!0===this.tableSchema.roleMasterPrm.read?(this.pageTitle=this.ModuleData.name,this.service=this.injector.get(this.ModuleData.serviceName),e.results.formData.forEach(e=>{var t=JSON.parse(e);this.FormData.push(t),("dropdown"==t.Fieldname||"multiselect"==t.Fieldname)&&this.Form.updateOptionbyurl(t),this.Form.updateAngForm()}),this.cd.detectChanges()):this.messageService.add({severity:"error",summary:"Error:",detail:"No Access"})},e=>{}):console.log("Error: in loading module id")}import(){this.displayDialog2=!0,this.displayDialog=!1}getData(){this.service.getAll().subscribe(e=>{this.virtualdata=e.results,this.cd.detectChanges()},e=>{})}onclickEventFormWithNoAction(e){let t=e.action;if(this.service[t]){let r=e.data;this.service[t](r)}}onclickEventForm(e){let t=e.action;if(this.service[t]){let r;r="submitform"==e.action||"delete"==e.action?e.data:e,this.service[t](r).subscribe(t=>{console.log("df",t),"submitform"==e.action&&1==t.status||"delete"==e.action&&1==t.status?(this.displayDialog=!1,this.table.refreshTable(),this.Form.resetForm(),this.messageService.add({severity:"success",summary:t.message,detail:""})):"submitform"!==e.action?(this.FormData=t,this.cd.detectChanges(),this.Form.detectChanges()):this.messageService.add({severity:"error",summary:"Error:",detail:t})},e=>{this.messageService.add({severity:"error",summary:"Errorq:",detail:e})})}}dropped(e){this.files=e;for(const t of e)if(t.fileEntry.isFile){t.fileEntry.file(e=>{let t=new FileReader;t.readAsText(e),t.onload=()=>{let e=t.result;this.csvRecordsArray=e.split(/\r\n|\n/),this.headersRow=this.getHeaderArray(this.csvRecordsArray),this.csvRecordsArray=this.getFullArray(this.csvRecordsArray)},t.onerror=function(){console.log("error is occured while reading file!")}})}else{const e=t.fileEntry;console.log(t.relativePath,e)}}getFullArray(e){e.splice(0,1);let t=[];for(let r=0;r<e.length-1;r++)t.push(e[r].split(/,(?=(?:(?:[^"]*"){2})*[^"]*$)/));return t}getHeaderArray(e){let t=e[0].split(","),r=[];for(let a=0;a<t.length;a++)this.FormData.forEach(e=>{e.DBColName==t[a]&&(e.csvheader=a)}),r.push({code:a,name:t[a]});return r}fileOver(e){console.log(e)}fileLeave(e){console.log(e)}reset(){this.headersRow=[],this.csvRecordsArray=[],this.FormData.forEach(e=>{e.defaultValue=void 0,e.csvheader=void 0})}importcsv(){if(0!=this.csvRecordsArray.length){if(this.FormData.forEach(e=>{1!=e.Required||null!=e.csvheader||null!=e.defaultValue||this.messageService.add({severity:"error",summary:"Error:",detail:"Fill Required Field "+e.Label})}),this.service.ImportCSV){let e=[];this.csvRecordsArray.forEach(t=>{var r={};this.FormData.forEach(e=>{"submitbutton"!=e.Fieldname&&(void 0!==e.defaultValue?r[e.DBColName]=e.defaultValue:null!==e.csvheader?r[e.DBColName]=t[e.csvheader]:r[e.DBColName]=!0)}),e.push(r)}),this.service.ImportCSV(e).subscribe(e=>{1==e.status?(this.displayDialog2=!1,setTimeout(()=>{this.table.refreshTable()},500),this.Form.resetForm(),this.reset(),this.FormData.forEach(e=>{e.defaultValue=void 0,e.csvheader=void 0}),this.messageService.add({severity:"success",summary:e.message,detail:""})):this.messageService.add({severity:"error",summary:"Error:",detail:e})},e=>{this.messageService.add({severity:"error",summary:"Error:",detail:e})})}}else this.messageService.add({severity:"error",summary:"Error:",detail:"Insert CSV File"})}dowldDemoCSV(){var e=[];this.FormData.forEach(t=>{"submitbutton"!=t.Fieldname&&e.push(t.DBColName)});let t=e.join(",");var r=new Blob([t],{type:"text/csv"});(0,u.saveAs)(r,"DemoCSVFile.csv")}};b.ctorParameters=()=>[{type:c.gz},{type:c.F0},{type:m.vq},{type:i.sBO},{type:m.KD},{type:i.zs3},{type:h.ez},{type:h.YP},{type:p.eN}],b.propDecorators={Form:[{type:i.i9L,args:["Form",{static:!1}]}],table:[{type:i.i9L,args:["table",{static:!1}]}]},b=(0,a.gn)([(0,i.wA2)({selector:"app-masterwindow",template:'<div class="animated fadeIn">\r\n    <div class="row">\r\n      <div class="col-md-12" *ngIf="tableSchema[\'mainschema\'].length > 0 ">\r\n        <div class="card">\r\n          <div class="card-header">\r\n            {{pageTitle}}\r\n\r\n\r\n            <div class="card-header-actions" style="height: 21px;">\r\n                <button *ngIf="tableSchema[\'roleMasterPrm\'].create==true" pButton class="btn btn-block btn-primary" (click)="createNew()" label="Create New" type="button" icon="pi pi-plus" iconPos="left"></button>\r\n            </div>\r\n\r\n            \x3c!--<div class="card-header-actions" style="height: 21px;" *ngIf="this.service[\'ImportCSV\']">\r\n                <button pButton class="btn btn-block btn-primary" (click)="import()" label="Import" type="button" icon="pi pi-upload" iconPos="left"></button>\r\n            </div>--\x3e\r\n          </div>\r\n          <div class="card-body datatable">\r\n            <app-datatable #table [tableData]="virtualdata" [tableSchema]="tableSchema" (onclickEvent)="onclickEvent($event)"></app-datatable>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n<p-dialog header="New {{pageTitle}}"  [(visible)]="displayDialog" [modal]="true" [style]="{width: \'80vw\'}" [maximizable]="true" [baseZIndex]="10000"\r\n    [draggable]="false" [resizable]="false">\r\n    <app-form #Form [formData]="FormData"  [type]="\'\'" (onclickEvent)="onclickEventForm($event)"></app-form>\r\n\r\n    <p-footer *ngIf="OtherOptions.ShowImport && OtherOptions.ShowImport == true">\r\n      <button pButton class="btn btn-block btn-primary float-right" (click)="import()" label="Import" type="button" icon="pi pi-upload" iconPos="left"></button>\r\n    </p-footer>\r\n</p-dialog>\r\n\r\n<p-dialog header="Import {{pageTitle}}"  [(visible)]="displayDialog2" [modal]="true" [style]="{width: \'80vw\'}" [maximizable]="true" [baseZIndex]="10000"\r\n    [draggable]="false" [resizable]="false">\r\n    <ngx-file-drop *ngIf="headersRow.length == 0" dropZoneLabel="Drop CSV files here" (onFileDrop)="dropped($event)"  (onFileOver)="fileOver($event)" (onFileLeave)="fileLeave($event)" accept=".csv">\r\n        <ng-template ngx-file-drop-content-tmp let-openFileSelector="openFileSelector">\r\n          <a href="javascript:void(0)" (click)="openFileSelector()">Drag and Drop Your CSV File Or Click Here..</a>\r\n        </ng-template>\r\n    </ngx-file-drop>\r\n    <p *ngIf="headersRow.length == 0" class="text-center"><a (click)="dowldDemoCSV()" href="javascript:void(0)">Download Demo File</a></p>\r\n\r\n    <div class="row" style="margin-top: 15px;" *ngIf="headersRow.length > 0">\r\n      <div class="col-md-12">\r\n        <h5 class="text-center">Please Select the Following Field With CSV Header</h5>\r\n        <table class="table table-bordered" style="max-width: 80vw;  margin: 0 auto;">\r\n          <tr>\r\n            <th>Heading</th>\r\n            <th>CSV Header</th>\r\n            <th>Default Value</th>\r\n          </tr>\r\n          <tr *ngFor="let item of FormData" >\r\n            <ng-container  *ngIf="item.Fieldname != \'submitbutton\'">\r\n              <th>{{item.Label}} <span *ngIf="item.Required == true">*</span></th>\r\n              <td>\r\n                <p-dropdown placeholder="Select From List" [options]="headersRow" [filter]="true" filterBy="name" [showClear]="true"  [(ngModel)]="item.csvheader" optionLabel="name" optionValue="code"></p-dropdown>\r\n              </td>\r\n              <td>\r\n                <div *ngIf="item.Fieldname !== \'dropdown\' && item.Fieldname !== \'inputswitch\'">\r\n                  <input type="text" style="width: 100%;" pInputText [(ngModel)]="item.defaultValue"/>\r\n                </div>\r\n                <div *ngIf="item.Fieldname == \'dropdown\'">\r\n                  <p-dropdown  [group]="item.group" [(ngModel)]="item.defaultValue"  [options]="item.Options"  optionLabel="{{item.optlable}}" optionValue="{{item.optCode}}" [filter]="item.filter" [showClear]="item.showclear" placeholder="Select From List"></p-dropdown>\r\n                </div>\r\n                <div *ngIf="item.Fieldname == \'inputswitch\'">\r\n                  <p-inputSwitch [(ngModel)]="item.defaultValue"></p-inputSwitch>\r\n                </div>\r\n              </td>\r\n            </ng-container >\r\n           </tr>\r\n        </table>\r\n\r\n      </div>\r\n    </div>\r\n    <p-footer>\r\n      <button pButton class="btn btn-block btn-error float-right" (click)="reset()" label="Reset" type="button" icon="pi pi-replay" iconPos="left"></button>\r\n      <button pButton class="btn btn-block btn-primary float-right" (click)="importcsv()" label="Import" type="button" icon="pi pi-upload" iconPos="left"></button>\r\n    </p-footer>\r\n</p-dialog>\r\n\r\n<p-dialog header="View {{pageTitle}}"  [(visible)]="displayView" [modal]="true" [style]="{width: \'80vw\'}" [maximizable]="true" [baseZIndex]="10000"\r\n    [draggable]="false" [resizable]="false">\r\n\r\n    <table class="table table-bordered">\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Value</th>\r\n      </tr>\r\n      <tr *ngFor="let item of FormData">\r\n        <ng-container  *ngIf="item.Fieldname!=\'submitbutton\'">\r\n          <th>{{item.Label}}</th>\r\n          <td *ngIf="item.Fieldname!=\'upload\'">{{viewData[item.DBColName]}}</td>\r\n          <td *ngIf="item.Fieldname==\'upload\'">\r\n            <a href="{{viewData[item.DBColName]}}" target="_blank">View</a>\r\n          </td>\r\n        </ng-container>\r\n      </tr>\r\n    </table>\r\n\r\n</p-dialog>\r\n\r\n<p-toast position="top-center"></p-toast>\r\n<p-confirmDialog header="Confirmation" icon="pi pi-exclamation-triangle"></p-confirmDialog>\r\n',providers:[h.ez,h.YP],styles:[""]})],b);var v=r(53737);let g=class{constructor(e,t,r,a,i,s,o,l,n){this.route=e,this.router=t,this.tableandform=r,this.cd=a,this.rolepermission=i,this.ProfileSettingService=s,this.injector=o,this.messageService=l,this.confirmationService=n,this.FormData=[]}ngAfterViewInit(){[{FormId:"1",FieldLable:"Text Field",Fieldname:"inputtext",icon:"fa-text-width",size:{name:"12",code:12},DBColName:"companyName",Label:"Company Name",PlaceHolder:"Company Name",ErrorTxt:"",ID:"",Class:"",Required:!1,HelpTxt:"",pKeyFilter:{name:"All",code:"all"},pKeyFilterOther:"",functionName:"",Disabled:!1,ForceDisabled:!1,MaxTextLength:32},{FormId:"3",FieldLable:"Text Field",Fieldname:"inputtext",icon:"fa-text-width",size:{name:"12",code:12},DBColName:"email",Label:"Email",PlaceHolder:"Email",ErrorTxt:"",ID:"",Class:"",Required:!1,HelpTxt:"",pKeyFilter:{name:"All",code:"all"},pKeyFilterOther:"",functionName:"",Disabled:!1,ForceDisabled:!1,MaxTextLength:32},{FormId:"4",FieldLable:"Text Field",Fieldname:"inputtext",icon:"fa-text-width",size:{name:"12",code:12},DBColName:"phoneNumber",Label:"PhoneNumber",PlaceHolder:"PhoneNumber",ErrorTxt:"",ID:"",Class:"",Required:!1,HelpTxt:"",pKeyFilter:{name:"All",code:"all"},pKeyFilterOther:"",functionName:"",Disabled:!1,ForceDisabled:!1,MaxTextLength:32},{FormId:"5",FieldLable:"Text Field",Fieldname:"inputtext",icon:"fa-text-width",size:{name:"12",code:12},DBColName:"addressOne",Label:"AddressOne",PlaceHolder:"AddressOne",ErrorTxt:"",ID:"",Class:"",Required:!1,HelpTxt:"",pKeyFilter:{name:"All",code:"all"},pKeyFilterOther:"",functionName:"",Disabled:!1,ForceDisabled:!1,MaxTextLength:32},{FormId:"6",FieldLable:"Text Field",Fieldname:"inputtext",icon:"fa-text-width",size:{name:"12",code:12},DBColName:"addressTwo",Label:"AddressTwo",PlaceHolder:"AddressTwo",ErrorTxt:"",ID:"",Class:"",Required:!1,HelpTxt:"",pKeyFilter:{name:"All",code:"all"},pKeyFilterOther:"",functionName:"",Disabled:!1,ForceDisabled:!1,MaxTextLength:32},{FormId:"45",FieldLable:"upload",Fieldname:"upload",icon:"fa-cloud-upload ",size:{name:"12",code:12},DBColName:"logoSmallFile",Label:"LogoSmall",PlaceHolder:"LogoSmall",ErrorTxt:"",ID:"",Class:"",Required:!1,HelpTxt:"",accept:"image/*",maxsize:"1090000",Disabled:!1,ForceDisabled:!1},{FormId:"456",FieldLable:"upload",Fieldname:"upload",icon:"fa-cloud-upload ",size:{name:"12",code:12},DBColName:"logoLargeFile",Label:"LogoLarge",PlaceHolder:"LogoLarge",ErrorTxt:"",ID:"",Class:"",Required:!1,HelpTxt:"",accept:"image/*",maxsize:"1090000",Disabled:!1,ForceDisabled:!1},{FormId:"4525",FieldLable:"Submit Button",Fieldname:"submitbutton",icon:"fa-check",size:{name:"12",code:12},Label:"Submit",LabelIcon:"pi pi-check",ID:"",Class:"float-right p-button-secondary",functionName:"submitform",Disabled:!1,ForceDisabled:!1}].forEach(e=>{var t=e;this.FormData.push(t),("dropdown"==t.Fieldname||"multiselect"==t.Fieldname)&&this.Form.updateOptionbyurl(t),this.Form.updateAngForm()})}ngOnInit(){this.service=this.injector.get("ProfileSettingService"),this.ProfileSettingService.getAll().subscribe(e=>{console.log(e),this.editdata(e.results)})}editdata(e){this.Form.editScreen=!0,this.Form.updateAngForm(e)}onclickEventForm(e){let t=e.action;if(this.service[t]){let r;r="submitform"==e.action||"delete"==e.action?e.data:e,this.service[t](r).subscribe(t=>{console.log("df",t),"submitform"==e.action&&1==t.status?this.messageService.add({severity:"success",summary:t.message,detail:""}):"delete"==e.action&&1==t.status?(this.Form.resetForm(),this.messageService.add({severity:"success",summary:t.message,detail:""})):"submitform"!==e.action?(this.FormData=t,this.cd.detectChanges(),this.Form.detectChanges()):this.messageService.add({severity:"error",summary:"Error:",detail:t})},e=>{this.messageService.add({severity:"error",summary:"Errorq:",detail:e})})}}};g.ctorParameters=()=>[{type:c.gz},{type:c.F0},{type:m.vq},{type:i.sBO},{type:m.rR},{type:m.Bf},{type:i.zs3},{type:h.ez},{type:h.YP}],g.propDecorators={Form:[{type:i.i9L,args:["Form",{static:!1}]}]},g=(0,a.gn)([(0,i.wA2)({selector:"app-settings",template:'<div class="animated fadeIn">\r\n  <div class="row">\r\n    <div class="col-md-12">\r\n      <div class="card">\r\n        <div class="card-header">\r\n          Settings\r\n\r\n          <div class="card-header-actions" style="height: 21px;">\r\n\r\n          </div>\r\n        </div>\r\n        <div class="card-body datatable">\r\n          <div class="pad-15">\r\n            <div class="container-fluid">\r\n              <app-form #Form [formData]="FormData"  [type]="\'\'" (onclickEvent)="onclickEventForm($event)"></app-form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n',providers:[h.ez,h.YP],styles:[""]})],g);const f=[{path:"",component:b,data:{title:"Master Window"}},{path:"rolepermission",component:v.X,data:{title:"Master Window"}},{path:"settings",component:g,data:{title:"Settings Window"}}];let F=class{};F=(0,a.gn)([(0,i.LVF)({imports:[c.Bz.forChild(f)],exports:[c.Bz]})],F);var y,D=r(70721),w=r(93184),S=r(90593);let x=y=class{constructor(e){y.injector=e}};x.ctorParameters=()=>[{type:i.zs3}],x=y=(0,a.gn)([(0,i.LVF)({declarations:[b,l.U,n.n,v.X,g],imports:[s.ez,F,o.UX,o.u5,d.v,D.Yi,w.m9,S.bQ],providers:[]})],x)}}]);
//# sourceMappingURL=src_app_views_masterwindow_masterwindow_module_ts-es2015.js.map