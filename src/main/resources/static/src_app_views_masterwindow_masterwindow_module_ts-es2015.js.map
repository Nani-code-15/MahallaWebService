{"version":3,"sources":["webpack:///src/app/views/masterwindow/masterwindow.component.ts","webpack:///src/app/views/masterwindow/masterwindow.component.html","webpack:///src/app/views/masterwindow/masterwindow.component.scss","webpack:///src/app/views/settings/settings.component.ts","webpack:///src/app/views/settings/settings.component.html","webpack:///src/app/views/settings/settings.component.scss","webpack:///src/app/views/masterwindow/masterwindow-routing.module.ts","webpack:///src/app/views/masterwindow/masterwindow.module.ts"],"names":["MasterwindowComponent","route","router","tableandform","cd","user","injector","messageService","confirmationService","http","files","ModuleID","displayDialog","displayDialog2","displayView","virtualdata","FormData","formValue","headersRow","csvRecordsArray","tableSchema","OtherOptions","viewData","this","routeReuseStrategy","shouldReuseRoute","e","action","editdata","viewdata","deletedata","deleteSelected","data","onclickEventFormWithNoAction","console","log","confirm","message","accept","service","subscribe","table","refreshTable","Form","resetForm","add","severity","summary","detail","detectChanges","error","editScreen","updateAngForm","onclickEventForm","dialog","setTimeout","document","getElementsByClassName","pageTitle","snapshot","queryParams","getAllModuleById","ModuleData","options","JSON","parse","serviceName","read","name","get","forEach","element","objh","push","Fieldname","updateOptionbyurl","getAll","param","droppedFile","fileEntry","isFile","file","reader","FileReader","readAsText","onload","csvData","result","split","getHeaderArray","getFullArray","onerror","relativePath","csvRecordsArr","splice","headerArray","j","length","headers","DBColName","csvheader","code","event","fd","defaultValue","undefined","Required","Label","ele","reset","hdf","csvArray","join","blob","Blob","type","saveAs","static","selector","template","providers","SettingsComponent","rolepermission","ProfileSettingService","FormId","FieldLable","icon","size","PlaceHolder","ErrorTxt","ID","Class","HelpTxt","pKeyFilter","pKeyFilterOther","functionName","Disabled","ForceDisabled","MaxTextLength","maxsize","LabelIcon","results","routes","path","component","title","MasterwindowRoutingModule","imports","exports","MasterwindowModule","declarations"],"mappings":"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","file":"x","sourcesContent":["import { Component, OnInit, ChangeDetectorRef, InjectionToken, Injector, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router  } from '@angular/router';\r\nimport { FormAndTableService, UserService } from '../../_services';\r\nimport {MessageService} from 'primeng/api';\r\nimport {ConfirmationService} from 'primeng/api';\r\nimport { NgxFileDropEntry, FileSystemFileEntry, FileSystemDirectoryEntry } from 'ngx-file-drop';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { saveAs } from 'file-saver';\r\n\r\n\r\n@Component({\r\n  selector: 'app-masterwindow',\r\n  templateUrl: './masterwindow.component.html',\r\n  styleUrls: ['./masterwindow.component.scss'],\r\n  providers: [MessageService, ConfirmationService]\r\n})\r\nexport class MasterwindowComponent implements OnInit {\r\n\r\n  public pageTitle: string;\r\n  public files: NgxFileDropEntry[] = [];\r\n\r\n  ModuleID: string = '';\r\n  displayDialog: boolean = false;\r\n  displayDialog2: boolean = false;\r\n  displayView: boolean = false;\r\n\r\n  @ViewChild('Form', {static: false}) Form:any;\r\n  @ViewChild('table', {static: false}) table:any;\r\n\r\n  virtualdata: any[] = [];\r\n  FormData: any[] = [];\r\n  formValue: any[] = [];\r\n  headersRow: any[] = [];\r\n  csvRecordsArray: any[] = [];\r\n  public tableSchema :any =[];\r\n  public ModuleData: any;\r\n  public service: any;\r\n  public OtherOptions: any = {};\r\n  viewData: any = {};\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private tableandform : FormAndTableService,\r\n    public cd: ChangeDetectorRef,\r\n    public user: UserService,\r\n    private injector:Injector,\r\n    private messageService: MessageService,\r\n    private confirmationService: ConfirmationService,\r\n    private http: HttpClient\r\n  ) {\r\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n   }\r\n\r\n  onclickEvent(e:any){\r\n    switch(e.action) {\r\n      case 'edit':\r\n        this.editdata(e);\r\n        break;\r\n      case 'view':\r\n        this.viewdata(e);\r\n        break;\r\n      case 'delete':\r\n        this.deletedata(e);\r\n        break;\r\n      case 'deleteSelected':\r\n        this.deleteSelected(e.data);\r\n        break;\r\n      default:\r\n        this.onclickEventFormWithNoAction(e);\r\n    }\r\n  }\r\n\r\n  viewdata(e:any){\r\n    this.displayView = true;\r\n    this.viewData = e?.data;\r\n    console.log(this.tableSchema);\r\n  }\r\n  deleteSelected(e:any){\r\n    this.confirmationService.confirm({\r\n        message: 'Are you sure that you want to perform this action?',\r\n        accept: () => {\r\n          this.service.deleteSelected(e).subscribe(\r\n            data => {\r\n              //this.getData();\r\n              this.table.refreshTable();\r\n              this.Form.resetForm();\r\n              this.messageService.add({severity:'success', summary: data['message'], detail:''});\r\n              this.cd.detectChanges();\r\n            },\r\n            error => {  }\r\n          );\r\n        }\r\n    });\r\n  }\r\n  createNew(){\r\n    this.Form.resetForm();\r\n    this.Form.editScreen = false;\r\n    this.displayDialog =  true;\r\n  }\r\n  editdata(e:any){\r\n    this.displayDialog =  true;\r\n    this.Form.editScreen = true;\r\n    this.Form.updateAngForm(e['data']);\r\n  }\r\n  deletedata(e:any){\r\n    this.confirmationService.confirm({\r\n        message: 'Are you sure that you want to perform this action?',\r\n        accept: () => {\r\n          this.onclickEventForm(e);\r\n        }\r\n    });\r\n  }\r\n\r\n  showDialogMaximized(dialog: any) {\r\n    setTimeout(() => {\r\n        const ele: HTMLElement = document.getElementsByClassName('pi-window-maximize')[0] as HTMLElement;\r\n        setTimeout(() => {\r\n            //ele.click(); -- Max Form Screen\r\n        }, 0);\r\n    }, 0);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.tableSchema['mainschema'] = [];\r\n    this.tableSchema['buttonSchema']= [];\r\n    this.pageTitle = this.route.snapshot.data['title'];\r\n\r\n    this.ModuleID = this.route.snapshot.queryParams['ModuleID'] || '';\r\n\r\n    if(this.ModuleID !== ''){\r\n      this.tableandform.getAllModuleById(this.ModuleID).subscribe(\r\n        data => {\r\n          this.ModuleData = data['results']['pageMaster'];\r\n          if(this.ModuleData.options !== ''){\r\n             this.OtherOptions = JSON.parse(this.ModuleData.options);\r\n             this.tableSchema['OtherOptions'] = JSON.parse(this.ModuleData.options);\r\n          }\r\n          this.tableSchema['buttonSchema'] = data['results']['tableButtonSchema'];\r\n          this.tableSchema['mainschema'] = data['results']['tableMainSchema'];\r\n          this.tableSchema['roleMasterPrm'] = data['results']['roleMasterPrm'];\r\n          this.tableSchema['serviceName'] = this.ModuleData.serviceName;\r\n\r\n          if(this.tableSchema['roleMasterPrm'].read !== true){\r\n            this.messageService.add({severity:'error', summary: 'Error:', detail:'No Access'});\r\n            return;\r\n          }\r\n\r\n\r\n          this.pageTitle = this.ModuleData.name;\r\n          this.service = this.injector.get(<any>this.ModuleData.serviceName);\r\n          //this.getData(); -- moved to datatable for pagination\r\n\r\n          data['results']['formData'].forEach(element => {\r\n            var objh = JSON.parse(element);\r\n            this.FormData.push(objh);\r\n            if(objh.Fieldname == 'dropdown'){\r\n              this.Form.updateOptionbyurl(objh);\r\n            }\r\n            else if(objh.Fieldname == 'multiselect'){\r\n              this.Form.updateOptionbyurl(objh);\r\n            }\r\n            this.Form.updateAngForm();\r\n          });\r\n\r\n          this.cd.detectChanges();\r\n        },\r\n        error => { }\r\n      );\r\n    }\r\n    else{\r\n      console.log('Error: in loading module id')\r\n    }\r\n  }\r\n\r\n  import(){\r\n    this.displayDialog2 =  true;\r\n    this.displayDialog = false;\r\n  }\r\n\r\n  getData(){\r\n    this.service.getAll().subscribe(\r\n      data => {\r\n        this.virtualdata = data['results'];\r\n        this.cd.detectChanges();\r\n      },\r\n      error => { }\r\n    );\r\n  }\r\n  onclickEventFormWithNoAction(e:any){\r\n    let action = e.action;\r\n    if(this.service[action]) {\r\n        let param = e.data\r\n        this.service[action](param);\r\n    }\r\n  }\r\n  onclickEventForm(e:any){\r\n    let action = e.action;\r\n    if(this.service[action]) {\r\n        let param;\r\n        if(e.action == 'submitform'){\r\n          param = e.data\r\n        }\r\n        else if(e.action == 'delete'){\r\n          param = e.data\r\n        }\r\n        else{\r\n          param = e\r\n        }\r\n\r\n        this.service[action](param).subscribe(\r\n          data => {\r\n            console.log('df',data)\r\n            if(e.action == 'submitform' && data['status'] == 1){\r\n                this.displayDialog =  false;\r\n                //this.getData();\r\n                this.table.refreshTable();\r\n                this.Form.resetForm();\r\n                this.messageService.add({severity:'success', summary: data['message'], detail:''});\r\n            }\r\n            else if(e.action == 'delete' && data['status'] == 1){\r\n                this.displayDialog =  false;\r\n                //this.getData();\r\n                this.table.refreshTable();\r\n                this.Form.resetForm();\r\n                this.messageService.add({severity:'success', summary: data['message'], detail:''});\r\n            }\r\n            else if(e.action !== 'submitform'){\r\n              this.FormData = data;\r\n              this.cd.detectChanges();\r\n              this.Form.detectChanges();\r\n              //this.Form.updateAngForm();\r\n            }\r\n            else{\r\n              this.messageService.add({severity:'error', summary: 'Error:', detail:data});\r\n            }\r\n\r\n           },\r\n          error => {this.messageService.add({severity:'error', summary: 'Errorq:', detail:error});});\r\n    }\r\n  }\r\n\r\n\r\n  public dropped(files: NgxFileDropEntry[]) {\r\n    this.files = files;\r\n    for (const droppedFile of files) {\r\n\r\n      // Is it a file?\r\n      if (droppedFile.fileEntry.isFile) {\r\n        const fileEntry = droppedFile.fileEntry as FileSystemFileEntry;\r\n        fileEntry.file((file: File) => {\r\n\r\n          //console.log(droppedFile.relativePath, file);\r\n          let reader = new FileReader();\r\n          reader.readAsText(file);\r\n\r\n          reader.onload = () => {\r\n            let csvData = reader.result;\r\n            this.csvRecordsArray = (<string>csvData).split(/\\r\\n|\\n/);\r\n\r\n            this.headersRow = this.getHeaderArray(this.csvRecordsArray);\r\n            this.csvRecordsArray = this.getFullArray(this.csvRecordsArray);\r\n\r\n          };\r\n\r\n          reader.onerror = function () {\r\n            console.log('error is occured while reading file!');\r\n          };\r\n\r\n        });\r\n      } else {\r\n        // It was a directory (empty directories are added, otherwise only files)\r\n        const fileEntry = droppedFile.fileEntry as FileSystemDirectoryEntry;\r\n        console.log(droppedFile.relativePath, fileEntry);\r\n      }\r\n    }\r\n  }\r\n\r\n  getFullArray(csvRecordsArr: any) {\r\n    csvRecordsArr.splice(0,1);\r\n    let headerArray = [];\r\n    for (let j = 0; j < csvRecordsArr.length - 1; j++) {\r\n      headerArray.push( (<string>csvRecordsArr[j]).split(/,(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/));\r\n    }\r\n    return headerArray;\r\n  }\r\n\r\n  getHeaderArray(csvRecordsArr: any) {\r\n    let headers = (<string>csvRecordsArr[0]).split(',');\r\n    let headerArray = [];\r\n    for (let j = 0; j < headers.length; j++) {\r\n\r\n      this.FormData.forEach((e:any)=>{\r\n        if(e.DBColName == headers[j]){\r\n          e.csvheader = j;\r\n        }\r\n      })\r\n      headerArray.push( {code: j, name: headers[j]} );\r\n    }\r\n    return headerArray;\r\n  }\r\n\r\n  public fileOver(event){\r\n    console.log(event);\r\n  }\r\n\r\n  public fileLeave(event){\r\n    console.log(event);\r\n  }\r\n  public reset(){\r\n    this.headersRow = [];\r\n    this.csvRecordsArray = [];\r\n    this.FormData.forEach(fd=>{fd.defaultValue = undefined;fd.csvheader = undefined;});\r\n  }\r\n\r\n\r\n\r\n  importcsv(){\r\n    if(this.csvRecordsArray.length == 0){\r\n      this.messageService.add({severity:'error', summary: 'Error:', detail:'Insert CSV File'});\r\n      return;\r\n    }\r\n    this.FormData.forEach(element => {\r\n      if(element.Required == true && element.csvheader == undefined && element.defaultValue == undefined){\r\n        this.messageService.add({severity:'error', summary: 'Error:', detail:'Fill Required Field '+ element.Label});\r\n        return;\r\n      }\r\n    });\r\n\r\n    if(this.service['ImportCSV']) {\r\n        let param = [];\r\n\r\n        this.csvRecordsArray.forEach(ele=>{\r\n          var data  = {};\r\n          this.FormData.forEach(fd=>{\r\n            if(fd.Fieldname != 'submitbutton'){\r\n              if(fd.defaultValue !== undefined){\r\n                data[fd.DBColName] = fd.defaultValue;\r\n              }\r\n              else if(fd.csvheader !== null){\r\n                data[fd.DBColName] = ele[fd.csvheader];\r\n              }\r\n              else{\r\n                data[fd.DBColName] = true\r\n              }\r\n            }\r\n          });\r\n          param.push(data);\r\n        })\r\n\r\n        this.service['ImportCSV'](param).subscribe(\r\n          data => {\r\n            if(data['status'] == 1){\r\n              this.displayDialog2 =  false;\r\n              setTimeout(()=>{\r\n                //this.getData();\r\n                this.table.refreshTable();\r\n              }, 500)\r\n              this.Form.resetForm();\r\n              this.reset();\r\n              this.FormData.forEach(fd=>{fd.defaultValue = undefined;fd.csvheader = undefined;});\r\n              this.messageService.add({severity:'success', summary: data['message'], detail:''});\r\n            }\r\n            else{\r\n              this.messageService.add({severity:'error', summary: 'Error:', detail:data});\r\n            }\r\n\r\n          },\r\n          error => {this.messageService.add({severity:'error', summary: 'Error:', detail:error});});\r\n    }\r\n  }\r\n\r\n  dowldDemoCSV(){\r\n    var hdf = [];\r\n    this.FormData.forEach(element => {\r\n      if(element.Fieldname != \"submitbutton\" ){\r\n        hdf.push(element.DBColName);\r\n      }\r\n    });\r\n    let csvArray = hdf.join(',');\r\n    var blob = new Blob([csvArray], {type: 'text/csv' })\r\n    saveAs(blob, \"DemoCSVFile.csv\");\r\n  }\r\n\r\n}\r\n","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\" *ngIf=\\\"tableSchema['mainschema'].length > 0 \\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-header\\\">\\r\\n            {{pageTitle}}\\r\\n\\r\\n\\r\\n            <div class=\\\"card-header-actions\\\" style=\\\"height: 21px;\\\">\\r\\n                <button *ngIf=\\\"tableSchema['roleMasterPrm'].create==true\\\" pButton class=\\\"btn btn-block btn-primary\\\" (click)=\\\"createNew()\\\" label=\\\"Create New\\\" type=\\\"button\\\" icon=\\\"pi pi-plus\\\" iconPos=\\\"left\\\"></button>\\r\\n            </div>\\r\\n\\r\\n            <!--<div class=\\\"card-header-actions\\\" style=\\\"height: 21px;\\\" *ngIf=\\\"this.service['ImportCSV']\\\">\\r\\n                <button pButton class=\\\"btn btn-block btn-primary\\\" (click)=\\\"import()\\\" label=\\\"Import\\\" type=\\\"button\\\" icon=\\\"pi pi-upload\\\" iconPos=\\\"left\\\"></button>\\r\\n            </div>-->\\r\\n          </div>\\r\\n          <div class=\\\"card-body datatable\\\">\\r\\n            <app-datatable #table [tableData]=\\\"virtualdata\\\" [tableSchema]=\\\"tableSchema\\\" (onclickEvent)=\\\"onclickEvent($event)\\\"></app-datatable>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n<p-dialog header=\\\"New {{pageTitle}}\\\"  [(visible)]=\\\"displayDialog\\\" [modal]=\\\"true\\\" [style]=\\\"{width: '80vw'}\\\" [maximizable]=\\\"true\\\" [baseZIndex]=\\\"10000\\\"\\r\\n    [draggable]=\\\"false\\\" [resizable]=\\\"false\\\">\\r\\n    <app-form #Form [formData]=\\\"FormData\\\"  [type]=\\\"''\\\" (onclickEvent)=\\\"onclickEventForm($event)\\\"></app-form>\\r\\n\\r\\n    <p-footer *ngIf=\\\"OtherOptions.ShowImport && OtherOptions.ShowImport == true\\\">\\r\\n      <button pButton class=\\\"btn btn-block btn-primary float-right\\\" (click)=\\\"import()\\\" label=\\\"Import\\\" type=\\\"button\\\" icon=\\\"pi pi-upload\\\" iconPos=\\\"left\\\"></button>\\r\\n    </p-footer>\\r\\n</p-dialog>\\r\\n\\r\\n<p-dialog header=\\\"Import {{pageTitle}}\\\"  [(visible)]=\\\"displayDialog2\\\" [modal]=\\\"true\\\" [style]=\\\"{width: '80vw'}\\\" [maximizable]=\\\"true\\\" [baseZIndex]=\\\"10000\\\"\\r\\n    [draggable]=\\\"false\\\" [resizable]=\\\"false\\\">\\r\\n    <ngx-file-drop *ngIf=\\\"headersRow.length == 0\\\" dropZoneLabel=\\\"Drop CSV files here\\\" (onFileDrop)=\\\"dropped($event)\\\"  (onFileOver)=\\\"fileOver($event)\\\" (onFileLeave)=\\\"fileLeave($event)\\\" accept=\\\".csv\\\">\\r\\n        <ng-template ngx-file-drop-content-tmp let-openFileSelector=\\\"openFileSelector\\\">\\r\\n          <a href=\\\"javascript:void(0)\\\" (click)=\\\"openFileSelector()\\\">Drag and Drop Your CSV File Or Click Here..</a>\\r\\n        </ng-template>\\r\\n    </ngx-file-drop>\\r\\n    <p *ngIf=\\\"headersRow.length == 0\\\" class=\\\"text-center\\\"><a (click)=\\\"dowldDemoCSV()\\\" href=\\\"javascript:void(0)\\\">Download Demo File</a></p>\\r\\n\\r\\n    <div class=\\\"row\\\" style=\\\"margin-top: 15px;\\\" *ngIf=\\\"headersRow.length > 0\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <h5 class=\\\"text-center\\\">Please Select the Following Field With CSV Header</h5>\\r\\n        <table class=\\\"table table-bordered\\\" style=\\\"max-width: 80vw;  margin: 0 auto;\\\">\\r\\n          <tr>\\r\\n            <th>Heading</th>\\r\\n            <th>CSV Header</th>\\r\\n            <th>Default Value</th>\\r\\n          </tr>\\r\\n          <tr *ngFor=\\\"let item of FormData\\\" >\\r\\n            <ng-container  *ngIf=\\\"item.Fieldname != 'submitbutton'\\\">\\r\\n              <th>{{item.Label}} <span *ngIf=\\\"item.Required == true\\\">*</span></th>\\r\\n              <td>\\r\\n                <p-dropdown placeholder=\\\"Select From List\\\" [options]=\\\"headersRow\\\" [filter]=\\\"true\\\" filterBy=\\\"name\\\" [showClear]=\\\"true\\\"  [(ngModel)]=\\\"item.csvheader\\\" optionLabel=\\\"name\\\" optionValue=\\\"code\\\"></p-dropdown>\\r\\n              </td>\\r\\n              <td>\\r\\n                <div *ngIf=\\\"item.Fieldname !== 'dropdown' && item.Fieldname !== 'inputswitch'\\\">\\r\\n                  <input type=\\\"text\\\" style=\\\"width: 100%;\\\" pInputText [(ngModel)]=\\\"item.defaultValue\\\"/>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"item.Fieldname == 'dropdown'\\\">\\r\\n                  <p-dropdown  [group]=\\\"item.group\\\" [(ngModel)]=\\\"item.defaultValue\\\"  [options]=\\\"item.Options\\\"  optionLabel=\\\"{{item.optlable}}\\\" optionValue=\\\"{{item.optCode}}\\\" [filter]=\\\"item.filter\\\" [showClear]=\\\"item.showclear\\\" placeholder=\\\"Select From List\\\"></p-dropdown>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"item.Fieldname == 'inputswitch'\\\">\\r\\n                  <p-inputSwitch [(ngModel)]=\\\"item.defaultValue\\\"></p-inputSwitch>\\r\\n                </div>\\r\\n              </td>\\r\\n            </ng-container >\\r\\n           </tr>\\r\\n        </table>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n    <p-footer>\\r\\n      <button pButton class=\\\"btn btn-block btn-error float-right\\\" (click)=\\\"reset()\\\" label=\\\"Reset\\\" type=\\\"button\\\" icon=\\\"pi pi-replay\\\" iconPos=\\\"left\\\"></button>\\r\\n      <button pButton class=\\\"btn btn-block btn-primary float-right\\\" (click)=\\\"importcsv()\\\" label=\\\"Import\\\" type=\\\"button\\\" icon=\\\"pi pi-upload\\\" iconPos=\\\"left\\\"></button>\\r\\n    </p-footer>\\r\\n</p-dialog>\\r\\n\\r\\n<p-dialog header=\\\"View {{pageTitle}}\\\"  [(visible)]=\\\"displayView\\\" [modal]=\\\"true\\\" [style]=\\\"{width: '80vw'}\\\" [maximizable]=\\\"true\\\" [baseZIndex]=\\\"10000\\\"\\r\\n    [draggable]=\\\"false\\\" [resizable]=\\\"false\\\">\\r\\n\\r\\n    <table class=\\\"table table-bordered\\\">\\r\\n      <tr>\\r\\n        <th>Name</th>\\r\\n        <th>Value</th>\\r\\n      </tr>\\r\\n      <tr *ngFor=\\\"let item of FormData\\\">\\r\\n        <ng-container  *ngIf=\\\"item.Fieldname!='submitbutton'\\\">\\r\\n          <th>{{item.Label}}</th>\\r\\n          <td *ngIf=\\\"item.Fieldname!='upload'\\\">{{viewData[item.DBColName]}}</td>\\r\\n          <td *ngIf=\\\"item.Fieldname=='upload'\\\">\\r\\n            <a href=\\\"{{viewData[item.DBColName]}}\\\" target=\\\"_blank\\\">View</a>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n      </tr>\\r\\n    </table>\\r\\n\\r\\n</p-dialog>\\r\\n\\r\\n<p-toast position=\\\"top-center\\\"></p-toast>\\r\\n<p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"pi pi-exclamation-triangle\\\"></p-confirmDialog>\\r\\n\";","export default \"\";","import { Component, OnInit, ChangeDetectorRef, InjectionToken, Injector, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { ActivatedRoute, Router  } from '@angular/router';\r\nimport { FormAndTableService, RolePermissionService, ProfileSettingService } from '../../_services';\r\nimport {MessageService} from 'primeng/api';\r\nimport {ConfirmationService} from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.scss'],\r\n  providers: [MessageService, ConfirmationService]\r\n})\r\nexport class SettingsComponent implements OnInit, AfterViewInit {\r\n\r\n  FormData: any[] = [ ];\r\n  @ViewChild('Form', {static: false}) Form:any;\r\n\r\n  public ModuleData: any;\r\n  public service: any;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private router: Router,\r\n    private tableandform : FormAndTableService,\r\n    public cd: ChangeDetectorRef,\r\n    public rolepermission: RolePermissionService,\r\n    public ProfileSettingService: ProfileSettingService,\r\n    private injector:Injector,\r\n    private messageService: MessageService,\r\n    private confirmationService: ConfirmationService,) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    var data = [\r\n      {\r\n        FormId: '1',\r\n        FieldLable: 'Text Field',\r\n        Fieldname: 'inputtext',\r\n        icon:'fa-text-width',\r\n        size: { name: \"12\", code: 12},\r\n        DBColName: 'companyName',\r\n        Label: 'Company Name',\r\n        PlaceHolder: 'Company Name',\r\n        ErrorTxt: '',\r\n        ID: '',\r\n        Class: '',\r\n        Required: false,\r\n        HelpTxt: '',\r\n        pKeyFilter:{ name: \"All\", code: \"all\"},\r\n        pKeyFilterOther: \"\",\r\n        functionName: \"\",\r\n        Disabled: false,\r\n        ForceDisabled: false,\r\n        MaxTextLength: 32,\r\n      },\r\n      {\r\n        FormId: '3',\r\n        FieldLable: 'Text Field',\r\n        Fieldname: 'inputtext',\r\n        icon:'fa-text-width',\r\n        size: { name: \"12\", code: 12},\r\n        DBColName: 'email',\r\n        Label: 'Email',\r\n        PlaceHolder: 'Email',\r\n        ErrorTxt: '',\r\n        ID: '',\r\n        Class: '',\r\n        Required: false,\r\n        HelpTxt: '',\r\n        pKeyFilter:{ name: \"All\", code: \"all\"},\r\n        pKeyFilterOther: \"\",\r\n        functionName: \"\",\r\n        Disabled: false,\r\n        ForceDisabled: false,\r\n        MaxTextLength: 32,\r\n      },\r\n      {\r\n        FormId: '4',\r\n        FieldLable: 'Text Field',\r\n        Fieldname: 'inputtext',\r\n        icon:'fa-text-width',\r\n        size: { name: \"12\", code: 12},\r\n        DBColName: 'phoneNumber',\r\n        Label: 'PhoneNumber',\r\n        PlaceHolder: 'PhoneNumber',\r\n        ErrorTxt: '',\r\n        ID: '',\r\n        Class: '',\r\n        Required: false,\r\n        HelpTxt: '',\r\n        pKeyFilter:{ name: \"All\", code: \"all\"},\r\n        pKeyFilterOther: \"\",\r\n        functionName: \"\",\r\n        Disabled: false,\r\n        ForceDisabled: false,\r\n        MaxTextLength: 32,\r\n      },\r\n      {\r\n        FormId: '5',\r\n        FieldLable: 'Text Field',\r\n        Fieldname: 'inputtext',\r\n        icon:'fa-text-width',\r\n        size: { name: \"12\", code: 12},\r\n        DBColName: 'addressOne',\r\n        Label: 'AddressOne',\r\n        PlaceHolder: 'AddressOne',\r\n        ErrorTxt: '',\r\n        ID: '',\r\n        Class: '',\r\n        Required: false,\r\n        HelpTxt: '',\r\n        pKeyFilter:{ name: \"All\", code: \"all\"},\r\n        pKeyFilterOther: \"\",\r\n        functionName: \"\",\r\n        Disabled: false,\r\n        ForceDisabled: false,\r\n        MaxTextLength: 32,\r\n      },\r\n      {\r\n        FormId: '6',\r\n        FieldLable: 'Text Field',\r\n        Fieldname: 'inputtext',\r\n        icon:'fa-text-width',\r\n        size: { name: \"12\", code: 12},\r\n        DBColName: 'addressTwo',\r\n        Label: 'AddressTwo',\r\n        PlaceHolder: 'AddressTwo',\r\n        ErrorTxt: '',\r\n        ID: '',\r\n        Class: '',\r\n        Required: false,\r\n        HelpTxt: '',\r\n        pKeyFilter:{ name: \"All\", code: \"all\"},\r\n        pKeyFilterOther: \"\",\r\n        functionName: \"\",\r\n        Disabled: false,\r\n        ForceDisabled: false,\r\n        MaxTextLength: 32,\r\n      },\r\n      {\r\n        FormId: '45',\r\n        FieldLable: 'upload',\r\n        Fieldname: 'upload',\r\n        icon:'fa-cloud-upload ',\r\n        size: { name: \"12\", code: 12},\r\n        DBColName: 'logoSmallFile',\r\n        Label: 'LogoSmall',\r\n        PlaceHolder: 'LogoSmall',\r\n        ErrorTxt: '',\r\n        ID: '',\r\n        Class: '',\r\n        Required: false,\r\n        HelpTxt: '',\r\n        accept: 'image/*',\r\n        maxsize: '1090000',\r\n        Disabled: false,\r\n        ForceDisabled: false,\r\n      },\r\n      {\r\n        FormId: '456',\r\n        FieldLable: 'upload',\r\n        Fieldname: 'upload',\r\n        icon:'fa-cloud-upload ',\r\n        size: { name: \"12\", code: 12},\r\n        DBColName: 'logoLargeFile',\r\n        Label: 'LogoLarge',\r\n        PlaceHolder: 'LogoLarge',\r\n        ErrorTxt: '',\r\n        ID: '',\r\n        Class: '',\r\n        Required: false,\r\n        HelpTxt: '',\r\n        accept: 'image/*',\r\n        maxsize: '1090000',\r\n        Disabled: false,\r\n        ForceDisabled: false,\r\n      },\r\n      {\r\n        FormId: '4525',\r\n        FieldLable: 'Submit Button',\r\n        Fieldname: 'submitbutton',\r\n        icon:'fa-check',\r\n        size: { name: \"12\", code: 12},\r\n        Label: 'Submit',\r\n        LabelIcon: 'pi pi-check',\r\n        ID: '',\r\n        Class: 'float-right p-button-secondary',\r\n        functionName: \"submitform\",\r\n        Disabled: false,\r\n        ForceDisabled: false,\r\n      }\r\n    ];\r\n\r\n    data.forEach(element => {\r\n      var objh = element;\r\n      this.FormData.push(objh);\r\n      if(objh.Fieldname == 'dropdown'){\r\n        this.Form.updateOptionbyurl(objh);\r\n      }\r\n      else if(objh.Fieldname == 'multiselect'){\r\n        this.Form.updateOptionbyurl(objh);\r\n      }\r\n      this.Form.updateAngForm();\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.service = this.injector.get(<any>'ProfileSettingService');\r\n\r\n    this.ProfileSettingService.getAll().subscribe((data:any)=>{\r\n      console.log(data);\r\n      this.editdata(data.results)\r\n    })\r\n  }\r\n\r\n  editdata(e:any){\r\n    this.Form.editScreen = true;\r\n    this.Form.updateAngForm(e);\r\n  }\r\n\r\n  onclickEventForm(e:any){\r\n\r\n    let action = e.action;\r\n    if(this.service[action]) {\r\n        let param;\r\n        if(e.action == 'submitform'){\r\n          param = e.data\r\n        }\r\n        else if(e.action == 'delete'){\r\n          param = e.data\r\n        }\r\n        else{\r\n          param = e\r\n        }\r\n\r\n        this.service[action](param).subscribe(\r\n          data => {\r\n            console.log('df',data)\r\n            if(e.action == 'submitform' && data['status'] == 1){\r\n                this.messageService.add({severity:'success', summary: data['message'], detail:''});\r\n            }\r\n            else if(e.action == 'delete' && data['status'] == 1){\r\n                this.Form.resetForm();\r\n                this.messageService.add({severity:'success', summary: data['message'], detail:''});\r\n            }\r\n            else if(e.action !== 'submitform'){\r\n              this.FormData = data;\r\n              this.cd.detectChanges();\r\n              this.Form.detectChanges();\r\n              //this.Form.updateAngForm();\r\n            }\r\n            else{\r\n              this.messageService.add({severity:'error', summary: 'Error:', detail:data});\r\n            }\r\n\r\n           },\r\n          error => {this.messageService.add({severity:'error', summary: 'Errorq:', detail:error});});\r\n    }\r\n  }\r\n\r\n}\r\n","export default \"<div class=\\\"animated fadeIn\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          Settings\\r\\n\\r\\n          <div class=\\\"card-header-actions\\\" style=\\\"height: 21px;\\\">\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-body datatable\\\">\\r\\n          <div class=\\\"pad-15\\\">\\r\\n            <div class=\\\"container-fluid\\\">\\r\\n              <app-form #Form [formData]=\\\"FormData\\\"  [type]=\\\"''\\\" (onclickEvent)=\\\"onclickEventForm($event)\\\"></app-form>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\";","export default \"\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MasterwindowComponent } from './masterwindow.component';\r\nimport { RolepermissionComponent } from '../rolepermission/rolepermission.component';\r\nimport { SettingsComponent } from '../settings/settings.component';\r\n// import { InvoiceComponent } from '../invoice/invoice.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MasterwindowComponent,\r\n    data: {\r\n      title: 'Master Window'\r\n    }\r\n\r\n  },\r\n  {\r\n    path: 'rolepermission',\r\n    component:  RolepermissionComponent,\r\n    data: {\r\n      title: 'Master Window'\r\n    }\r\n  },\r\n  {\r\n    path: 'settings',\r\n    component:  SettingsComponent,\r\n    data: {\r\n      title: 'Settings Window'\r\n    }\r\n  },\r\n  // {\r\n  //   path: 'invoice',\r\n  //   component:  InvoiceComponent,\r\n  //   data: {\r\n  //     title: 'Invoice Window'\r\n  //   }\r\n  // },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class MasterwindowRoutingModule { }\r\n","import { NgModule, InjectionToken, Injector } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { FormComponent } from '../../containers/form/form.component';\r\nimport { DatatableComponent } from '../../containers/datatable/datatable.component';\r\nimport { PrimengcompModule } from '../../primengcomp/primengcomp.module';\r\nimport { MasterwindowRoutingModule } from './masterwindow-routing.module';\r\nimport { MasterwindowComponent } from './masterwindow.component';\r\nimport { RolepermissionComponent } from '../rolepermission/rolepermission.component';\r\nimport { NgxFileDropModule } from 'ngx-file-drop';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { SortablejsModule } from 'ngx-sortablejs';\r\nimport { SettingsComponent } from '../settings/settings.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MasterwindowComponent,\r\n    FormComponent,\r\n    DatatableComponent,\r\n    RolepermissionComponent,\r\n    SettingsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MasterwindowRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    PrimengcompModule,\r\n    NgxFileDropModule,\r\n    ChartsModule,\r\n    SortablejsModule\r\n  ],\r\n  providers: [\r\n  ]\r\n})\r\nexport class MasterwindowModule {\r\n  static injector: Injector;\r\n  constructor(injector: Injector) {\r\n    MasterwindowModule.injector = injector;\r\n  }\r\n}\r\n"]}